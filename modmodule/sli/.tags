!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BIND_RESTRICTED	../libltdl/loaders/shl_load.c	132;"	d	file:
CommonPropertiesType	../modulatory_connection.h	/^            typedef ModulatoryCommonProperties CommonPropertiesType;$/;"	t	class:mynest::ModulatoryConnection	access:public
ConnTestDummyNode	../modulatory_connection.h	/^            class ConnTestDummyNode $/;"	c	class:mynest::ModulatoryConnection	inherits:nest::ConnTestDummyNodeBase	access:public
ConnectionBase	../da_connection.h	/^            typedef ModulatoryConnection< targetidentifierT > ConnectionBase;$/;"	t	class:mynest::D1Connection	access:public
ConnectionBase	../da_connection.h	/^            typedef ModulatoryConnection< targetidentifierT > ConnectionBase;$/;"	t	class:mynest::D2Connection	access:public
ConnectionBase	../modulatory_connection.h	/^            typedef nest::Connection< targetidentifierT > ConnectionBase;$/;"	t	class:mynest::ModulatoryConnection	access:public
CreateProcess	../libltdl/config/ltmain.sh	/^   CreateProcess().  We must quote the arguments since Win32 CreateProcess()$/;"	f
D1Connection	../da_connection.h	/^            D1Connection() $/;"	f	class:mynest::D1Connection	access:public	signature:()
D1Connection	../da_connection.h	/^        class D1Connection : public ModulatoryConnection< targetidentifierT >$/;"	c	namespace:mynest	inherits:ModulatoryConnection
D2Connection	../da_connection.h	/^            D2Connection() $/;"	f	class:mynest::D2Connection	access:public	signature:()
D2Connection	../da_connection.h	/^        class D2Connection : public ModulatoryConnection< targetidentifierT >$/;"	c	namespace:mynest	inherits:ModulatoryConnection
DA_CONNECTION	../da_connection.h	2;"	d
DIR	../libltdl/libltdl/lt__dirent.h	/^} DIR;$/;"	t	typeref:struct:__anon3
DIR	../libltdl/libltdl/lt__dirent.h	55;"	d
DLERROR	../libltdl/loaders/dlopen.c	143;"	d	file:
DLERROR	../libltdl/loaders/dlopen.c	145;"	d	file:
DL__SETERROR	../libltdl/loaders/dlopen.c	148;"	d	file:
DYLD_BOOL	../libltdl/loaders/dyld.c	/^ enum DYLD_BOOL {$/;"	g	file:
DYLD__SETERROR	../libltdl/loaders/dyld.c	162;"	d	file:
DYLD__SETMYERROR	../libltdl/loaders/dyld.c	161;"	d	file:
DYNAMIC_PATH	../libltdl/loaders/shl_load.c	129;"	d	file:
D_NAMLEN	../libltdl/libltdl/lt__dirent.h	45;"	d
D_NAMLEN	../libltdl/libltdl/lt__dirent.h	53;"	d
ENUM_DYLD_BOOL	../libltdl/loaders/dyld.c	108;"	d	file:
EOS_CHAR	../libltdl/argz.c	46;"	d	file:
EXIT_FAILURE	../libltdl/libltdl/lt_system.h	43;"	d
EXIT_SUCCESS	../libltdl/libltdl/lt_system.h	40;"	d
FALSE	../libltdl/loaders/dyld.c	/^    FALSE,$/;"	e	enum:DYLD_BOOL	file:
FALSE	../libltdl/loaders/dyld.c	109;"	d	file:
FREE	../libltdl/libltdl/lt__alloc.h	40;"	d
LC_LOAD_WEAK_DYLIB	../libltdl/loaders/dyld.c	120;"	d	file:
LC_REQ_DYLD	../libltdl/loaders/dyld.c	117;"	d	file:
LOADLIB_SETERROR	../libltdl/loaders/loadlibrary.c	104;"	d	file:
LOADLIB__SETERROR	../libltdl/loaders/loadlibrary.c	103;"	d	file:
LOCALFREE	../libltdl/loaders/loadlibrary.c	101;"	d	file:
LTDL_H	../libltdl/ltdl.h	34;"	d
LTDL_SEARCHPATH_VAR	../libltdl/ltdl.c	41;"	d	file:
LTDL_SEARCHPATH_VAR	../libltdl/ltdl.c	42;"	d	file:
LTDL_SET_PRELOADED_SYMBOLS	../libltdl/ltdl.h	108;"	d
LT_ARCHIVE_EXT	../libltdl/ltdl.c	45;"	d	file:
LT_ARCHIVE_EXT	../libltdl/ltdl.c	46;"	d	file:
LT_BEGIN_C_DECLS	../libltdl/libltdl/lt_system.h	57;"	d
LT_BEGIN_C_DECLS	../libltdl/libltdl/lt_system.h	60;"	d
LT_BIND_FLAGS	../libltdl/loaders/shl_load.c	135;"	d	file:
LT_CONC	../libltdl/libltdl/lt_system.h	159;"	d
LT_CONC3	../libltdl/libltdl/lt_system.h	163;"	d
LT_DIRSEP_CHAR	../libltdl/libltdl/lt_system.h	131;"	d
LT_DLIS_RESIDENT	../libltdl/ltdl.c	71;"	d	file:
LT_DLIS_SYMGLOBAL	../libltdl/ltdl.c	72;"	d	file:
LT_DLIS_SYMLOCAL	../libltdl/ltdl.c	73;"	d	file:
LT_DLLOADER_APPEND	../libltdl/libltdl/lt_dlloader.h	/^  LT_DLLOADER_PREPEND = 0, LT_DLLOADER_APPEND$/;"	e	enum:__anon5
LT_DLLOADER_H	../libltdl/libltdl/lt_dlloader.h	32;"	d
LT_DLLOADER_PREPEND	../libltdl/libltdl/lt_dlloader.h	/^  LT_DLLOADER_PREPEND = 0, LT_DLLOADER_APPEND$/;"	e	enum:__anon5
LT_DLSYM_CONST	../libltdl/libltdl/lt_system.h	83;"	d
LT_DLSYM_CONST	../libltdl/libltdl/lt_system.h	86;"	d
LT_DLSYM_CONST	../libltdl/libltdl/lt_system.h	88;"	d
LT_END_C_DECLS	../libltdl/libltdl/lt_system.h	58;"	d
LT_END_C_DECLS	../libltdl/libltdl/lt_system.h	61;"	d
LT_EOS_CHAR	../libltdl/libltdl/lt_system.h	51;"	d
LT_ERROR	../libltdl/libltdl/lt_error.h	68;"	d
LT_ERROR	../libltdl/libltdl/lt_error.h	70;"	d
LT_ERROR	../libltdl/lt_error.c	37;"	d	file:
LT_ERROR	../libltdl/lt_error.c	39;"	d	file:
LT_ERROR_H	../libltdl/libltdl/lt_error.h	33;"	d
LT_ERROR_LEN_MAX	../libltdl/libltdl/lt_error.h	76;"	d
LT_ERROR_MAX	../libltdl/libltdl/lt_error.h	/^	LT_ERROR_MAX$/;"	e	enum:__anon4
LT_FILENAME_MAX	../libltdl/libltdl/lt_system.h	47;"	d
LT_FILENAME_MAX	../libltdl/ltdl.c	50;"	d	file:
LT_GLOBAL_DATA	../libltdl/libltdl/lt__private.h	68;"	d
LT_GLOBAL_DATA	../libltdl/libltdl/lt__private.h	72;"	d
LT_LAZY_OR_NOW	../libltdl/loaders/dlopen.c	109;"	d	file:
LT_LAZY_OR_NOW	../libltdl/loaders/dlopen.c	112;"	d	file:
LT_LAZY_OR_NOW	../libltdl/loaders/dlopen.c	118;"	d	file:
LT_LAZY_OR_NOW	../libltdl/loaders/dlopen.c	121;"	d	file:
LT_LAZY_OR_NOW	../libltdl/loaders/dlopen.c	126;"	d	file:
LT_LIBEXT	../libltdl/ltdl.c	54;"	d	file:
LT_LIBPREFIX	../libltdl/ltdl.c	58;"	d	file:
LT_PATHSEP_CHAR	../libltdl/libltdl/lt_system.h	132;"	d
LT_PATHSEP_CHAR	../libltdl/libltdl/lt_system.h	134;"	d
LT_READTEXT_MODE	../libltdl/libltdl/lt_system.h	142;"	d
LT_READTEXT_MODE	../libltdl/libltdl/lt_system.h	144;"	d
LT_READTEXT_MODE	../libltdl/libltdl/lt_system.h	146;"	d
LT_SCOPE	../libltdl/argz_.h	43;"	d
LT_SCOPE	../libltdl/argz_.h	65;"	d
LT_SCOPE	../libltdl/libltdl/lt_system.h	116;"	d
LT_SCOPE	../libltdl/libltdl/lt_system.h	120;"	d
LT_SCOPE	../libltdl/libltdl/lt_system.h	124;"	d
LT_SCOPE	../libltdl/libltdl/slist.h	48;"	d
LT_SCOPE	../libltdl/libltdl/slist.h	93;"	d
LT_STMT_END	../libltdl/libltdl/lt_system.h	68;"	d
LT_STMT_END	../libltdl/libltdl/lt_system.h	72;"	d
LT_STMT_END	../libltdl/libltdl/lt_system.h	75;"	d
LT_STMT_START	../libltdl/libltdl/lt_system.h	67;"	d
LT_STMT_START	../libltdl/libltdl/lt_system.h	71;"	d
LT_STMT_START	../libltdl/libltdl/lt_system.h	74;"	d
LT_STR	../libltdl/libltdl/lt_system.h	154;"	d
LT_STRLEN	../libltdl/ltdl.h	44;"	d
LT_SYMBOL_LENGTH	../libltdl/ltdl.c	62;"	d	file:
LT_SYMBOL_LENGTH	../libltdl/ltdl.c	63;"	d	file:
LT_SYMBOL_OVERHEAD	../libltdl/ltdl.c	66;"	d	file:
LT_SYMBOL_OVERHEAD	../libltdl/ltdl.c	67;"	d	file:
LT_SYSTEM_H	../libltdl/libltdl/lt_system.h	32;"	d
LT__ALLOC_H	../libltdl/libltdl/lt__alloc.h	32;"	d
LT__ARGZ_H	../libltdl/argz_.h	32;"	d
LT__CONC	../libltdl/libltdl/lt_system.h	158;"	d
LT__CONC3	../libltdl/libltdl/lt_system.h	162;"	d
LT__DIRENT_H	../libltdl/libltdl/lt__dirent.h	32;"	d
LT__GETERROR	../libltdl/libltdl/lt__private.h	139;"	d
LT__GLIBC_H	../libltdl/libltdl/lt__glibc.h	32;"	d
LT__MAGIC	../libltdl/loaders/dyld.c	156;"	d	file:
LT__MAGIC	../libltdl/loaders/dyld.c	158;"	d	file:
LT__PRIVATE_H	../libltdl/libltdl/lt__private.h	32;"	d
LT__SETERROR	../libltdl/libltdl/lt__private.h	141;"	d
LT__SETERRORSTR	../libltdl/libltdl/lt__private.h	140;"	d
LT__STR	../libltdl/libltdl/lt_system.h	153;"	d
LT__STRERROR	../libltdl/libltdl/lt__private.h	137;"	d
LT__STRL_H	../libltdl/libltdl/lt__strl.h	32;"	d
LT__SYMLOOKUP_OPTS	../libltdl/loaders/dyld.c	152;"	d	file:
LT__UNUSED	../libltdl/libltdl/lt__private.h	83;"	d
MALLOC	../libltdl/libltdl/lt__alloc.h	38;"	d
MEMREASSIGN	../libltdl/libltdl/lt__alloc.h	42;"	d
MODMODULE_H	../modmodule.h	24;"	d
MODULATORY_CONNECTION	../modulatory_connection.h	2;"	d
ModModule	../modmodule.cpp	/^mynest::ModModule::ModModule()$/;"	f	class:mynest::ModModule	signature:()
ModModule	../modmodule.h	/^  ModModule();$/;"	p	class:mynest::ModModule	access:public	signature:()
ModModule	../modmodule.h	/^class ModModule : public SLIModule$/;"	c	namespace:mynest	inherits:SLIModule
ModulatoryCommonProperties	../modulatory_connection.cpp	/^    ModulatoryCommonProperties::ModulatoryCommonProperties()$/;"	f	class:mynest::ModulatoryCommonProperties	signature:()
ModulatoryCommonProperties	../modulatory_connection.h	/^            ModulatoryCommonProperties();$/;"	p	class:mynest::ModulatoryCommonProperties	access:public	signature:()
ModulatoryCommonProperties	../modulatory_connection.h	/^    class ModulatoryCommonProperties : public nest::CommonSynapseProperties$/;"	c	namespace:mynest	inherits:nest::CommonSynapseProperties
ModulatoryConnection	../modulatory_connection.h	/^            ModulatoryConnection() $/;"	f	class:mynest::ModulatoryConnection	access:public	signature:()
ModulatoryConnection	../modulatory_connection.h	/^        class ModulatoryConnection : public nest::Connection< targetidentifierT >$/;"	c	namespace:mynest	inherits:nest::Connection
NSADDIMAGE_OPTION_MATCH_FILENAME_BY_INSTALLNAME	../libltdl/loaders/dyld.c	136;"	d	file:
NSADDIMAGE_OPTION_NONE	../libltdl/loaders/dyld.c	124;"	d	file:
NSADDIMAGE_OPTION_RETURN_ONLY_IF_LOADED	../libltdl/loaders/dyld.c	133;"	d	file:
NSADDIMAGE_OPTION_RETURN_ON_ERROR	../libltdl/loaders/dyld.c	127;"	d	file:
NSADDIMAGE_OPTION_WITH_SEARCHING	../libltdl/loaders/dyld.c	130;"	d	file:
NSLOOKUPSYMBOLINIMAGE_OPTION_BIND	../libltdl/loaders/dyld.c	140;"	d	file:
NSLOOKUPSYMBOLINIMAGE_OPTION_BIND_FULLY	../libltdl/loaders/dyld.c	146;"	d	file:
NSLOOKUPSYMBOLINIMAGE_OPTION_BIND_NOW	../libltdl/loaders/dyld.c	143;"	d	file:
NSLOOKUPSYMBOLINIMAGE_OPTION_RETURN_ON_ERROR	../libltdl/loaders/dyld.c	149;"	d	file:
NULL	../libltdl/lt_dlloader.c	/^	slist_foreach (slist_tail (loaders), loader_dump_callback, NULL);$/;"	l
REALLOC	../libltdl/libltdl/lt__alloc.h	39;"	d
RETURN_FAILURE	../libltdl/lt_dlloader.c	35;"	d	file:
RETURN_SUCCESS	../libltdl/lt_dlloader.c	34;"	d	file:
RTLD_GLOBAL	../libltdl/loaders/dlopen.c	133;"	d	file:
RTLD_LOCAL	../libltdl/loaders/dlopen.c	138;"	d	file:
R_OK	../libltdl/libltdl/lt_system.h	138;"	d
SLIST_H	../libltdl/libltdl/slist.h	42;"	d
SList	../libltdl/libltdl/slist.h	/^} SList;$/;"	t	typeref:struct:slist
SListCallback	../libltdl/libltdl/slist.h	/^typedef void *	SListCallback	(SList *item, void *userdata);$/;"	t
SListCompare	../libltdl/libltdl/slist.h	/^typedef int	SListCompare	(const SList *item1, const SList *item2,$/;"	t
STR_DLNAME	../libltdl/ltdl.c	1075;"	d	file:
STR_DLNAME	../libltdl/ltdl.c	1076;"	d	file:
STR_DL_DEPLIBS	../libltdl/ltdl.c	1104;"	d	file:
STR_DL_DEPLIBS	../libltdl/ltdl.c	1105;"	d	file:
STR_LIBDIR	../libltdl/ltdl.c	1092;"	d	file:
STR_LIBDIR	../libltdl/ltdl.c	1093;"	d	file:
STR_LIBRARY_NAMES	../libltdl/ltdl.c	1120;"	d	file:
STR_LIBRARY_NAMES	../libltdl/ltdl.c	1121;"	d	file:
STR_OLD_LIBRARY	../libltdl/ltdl.c	1082;"	d	file:
STR_OLD_LIBRARY	../libltdl/ltdl.c	1083;"	d	file:
TRUE	../libltdl/loaders/dyld.c	/^    TRUE$/;"	e	enum:DYLD_BOOL	file:
TRUE	../libltdl/loaders/dyld.c	110;"	d	file:
WINDOWS_DIRENT_EMULATION	../libltdl/libltdl/lt__dirent.h	49;"	d
Win32FindData	../libltdl/libltdl/lt__dirent.h	/^  WIN32_FIND_DATA Win32FindData;$/;"	m	struct:__anon3	access:public
__CYGWIN__	../libltdl/libltdl/lt_system.h	95;"	d
__WINDOWS__	../libltdl/libltdl/lt_system.h	102;"	d
__WINDOWS__	../libltdl/libltdl/lt_system.h	104;"	d
__WINDOWS__	../libltdl/libltdl/lt_system.h	107;"	d
__WINDOWS__	../libltdl/libltdl/lt_system.h	99;"	d
__anon1::id_string	../libltdl/ltdl.c	/^  const char *id_string;$/;"	m	struct:__anon1	file:	access:public
__anon1::iface	../libltdl/ltdl.c	/^  lt_dlhandle_interface *iface;$/;"	m	struct:__anon1	file:	access:public
__anon2::data	../libltdl/libltdl/lt__private.h	/^  void *		data;$/;"	m	struct:__anon2	access:public
__anon2::key	../libltdl/libltdl/lt__private.h	/^  lt_dlinterface_id	key;$/;"	m	struct:__anon2	access:public
__anon3::Win32FindData	../libltdl/libltdl/lt__dirent.h	/^  WIN32_FIND_DATA Win32FindData;$/;"	m	struct:__anon3	access:public
__anon3::file_info	../libltdl/libltdl/lt__dirent.h	/^  struct dirent file_info;$/;"	m	struct:__anon3	typeref:struct:__anon3::dirent	access:public
__anon3::firsttime	../libltdl/libltdl/lt__dirent.h	/^  BOOL firsttime;$/;"	m	struct:__anon3	access:public
__anon3::hSearch	../libltdl/libltdl/lt__dirent.h	/^  HANDLE hSearch;$/;"	m	struct:__anon3	access:public
__anon6::dlloader_data	../libltdl/libltdl/lt_dlloader.h	/^  lt_user_data		dlloader_data;$/;"	m	struct:__anon6	access:public
__anon6::dlloader_exit	../libltdl/libltdl/lt_dlloader.h	/^  lt_dlloader_exit *	dlloader_exit;$/;"	m	struct:__anon6	access:public
__anon6::dlloader_init	../libltdl/libltdl/lt_dlloader.h	/^  lt_dlloader_init *	dlloader_init;$/;"	m	struct:__anon6	access:public
__anon6::find_sym	../libltdl/libltdl/lt_dlloader.h	/^  lt_find_sym *		find_sym;$/;"	m	struct:__anon6	access:public
__anon6::module_close	../libltdl/libltdl/lt_dlloader.h	/^  lt_module_close *	module_close;$/;"	m	struct:__anon6	access:public
__anon6::module_open	../libltdl/libltdl/lt_dlloader.h	/^  lt_module_open *	module_open;$/;"	m	struct:__anon6	access:public
__anon6::name	../libltdl/libltdl/lt_dlloader.h	/^  const char *		name;$/;"	m	struct:__anon6	access:public
__anon6::priority	../libltdl/libltdl/lt_dlloader.h	/^  lt_dlloader_priority	priority;$/;"	m	struct:__anon6	access:public
__anon6::sym_prefix	../libltdl/libltdl/lt_dlloader.h	/^  const char *		sym_prefix;$/;"	m	struct:__anon6	access:public
__anon7::address	../libltdl/ltdl.h	/^  void       *address;$/;"	m	struct:__anon7	access:public
__anon7::name	../libltdl/ltdl.h	/^  const char *name;$/;"	m	struct:__anon7	access:public
__anon8::filename	../libltdl/ltdl.h	/^  char *	filename;	\/* file name *\/$/;"	m	struct:__anon8	access:public
__anon8::is_resident	../libltdl/ltdl.h	/^  unsigned int	is_resident:1;	\/* module can't be unloaded. *\/$/;"	m	struct:__anon8	access:public
__anon8::is_symglobal	../libltdl/ltdl.h	/^  unsigned int	is_symglobal:1;	\/* module symbols can satisfy$/;"	m	struct:__anon8	access:public
__anon8::is_symlocal	../libltdl/ltdl.h	/^  unsigned int	is_symlocal:1;	\/* module symbols are only available$/;"	m	struct:__anon8	access:public
__anon8::name	../libltdl/ltdl.h	/^  char *	name;		\/* module name *\/$/;"	m	struct:__anon8	access:public
__anon8::ref_count	../libltdl/ltdl.h	/^  int		ref_count;	\/* number of times lt_dlopened minus$/;"	m	struct:__anon8	access:public
__attribute__	../libltdl/libltdl/lt__private.h	78;"	d
__need_error_t	../libltdl/argz_.h	35;"	d
__private_extern__	../libltdl/loaders/dyld.c	99;"	d	file:
ac_fn_c_check_decl	../libltdl/configure	/^ac_fn_c_check_decl ()$/;"	f
ac_fn_c_check_func	../libltdl/configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	../libltdl/configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_type	../libltdl/configure	/^ac_fn_c_check_type ()$/;"	f
ac_fn_c_try_compile	../libltdl/configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	../libltdl/configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	../libltdl/configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	../libltdl/configure	/^ac_fn_c_try_run ()$/;"	f
add_symlist	../libltdl/loaders/preopen.c	/^add_symlist (const lt_dlsymlist *symlist)$/;"	f	file:	signature:(const lt_dlsymlist *symlist)
add_symlist	../libltdl/loaders/preopen.c	/^static int add_symlist   (const lt_dlsymlist *symlist);$/;"	p	file:	signature:(const lt_dlsymlist *symlist)
address	../libltdl/loaders/dld_link.c	/^  void *address = dld_get_func (name);$/;"	l
address	../libltdl/loaders/dlopen.c	/^  void *address = dlsym (module, name);$/;"	l
address	../libltdl/loaders/dyld.c	/^      void *address, *unused;$/;"	l
address	../libltdl/loaders/load_add_on.c	/^  void *address = 0;$/;"	l
address	../libltdl/loaders/loadlibrary.c	/^  void *address = (void *) GetProcAddress ((HMODULE) module, name);$/;"	l
address	../libltdl/loaders/shl_load.c	/^      void *address;$/;"	l
address	../libltdl/loaders/shl_load.c	/^  void *address = 0;$/;"	l
address	../libltdl/ltdl.c	/^  void *address;$/;"	l
address	../libltdl/ltdl.h	/^  void       *address;$/;"	m	struct:__anon7	access:public
advise	../libltdl/ltdl.c	/^  lt_dladvise	advise;$/;"	l
advise	../libltdl/ltdl.c	/^  lt_dladvise   advise		= (lt_dladvise) data2;$/;"	l
advise	../libltdl/ltdl.c	/^  lt_dladvise advise = (lt_dladvise) lt__zalloc (sizeof (struct lt__advise));$/;"	l
aix_post_process_depfile	../libltdl/config/depcomp	/^aix_post_process_depfile ()$/;"	f
alloc_die_default	../libltdl/lt__alloc.c	/^alloc_die_default (void)$/;"	f	file:	signature:(void)
alloc_die_default	../libltdl/lt__alloc.c	/^static void alloc_die_default (void);$/;"	p	file:	signature:(void)
alpha	../da_connection.h	/^            nest::double_t alpha;$/;"	m	class:mynest::D1Connection	access:private
alpha	../da_connection.h	/^            nest::double_t alpha;$/;"	m	class:mynest::D2Connection	access:private
archive_ext	../libltdl/ltdl.c	/^static	const char	archive_ext[]		= LT_ARCHIVE_EXT;$/;"	v	file:
archive_name	../libltdl/ltdl.c	/^  char *	archive_name	= 0;$/;"	l
argz	../libltdl/argz.c	/^    char   *argz	= (char *) realloc (*pargz, argz_len);$/;"	l
argz	../libltdl/argz.c	/^  char  *argz;$/;"	l
argz	../libltdl/argz.c	/^  char *argz = 0;$/;"	l
argz	../libltdl/ltdl.c	/^  char   *argz     = 0;$/;"	l
argz	../libltdl/ltdl.c	/^  char  *argz		= 0;$/;"	l
argz	../libltdl/ltdl.c	/^  char *argz		= 0;$/;"	l
argz_append	../libltdl/argz.c	/^argz_append (char **pargz, size_t *pargz_len, const char *buf, size_t buf_len)$/;"	f	signature:(char **pargz, size_t *pargz_len, const char *buf, size_t buf_len)
argz_append	../libltdl/argz_.h	/^LT_SCOPE error_t argz_append	(char **pargz, size_t *pargz_len,$/;"	p	signature:(char **pargz, size_t *pargz_len, const char *buf, size_t buf_len)
argz_append	../libltdl/libltdl/lt__glibc.h	45;"	d
argz_append	../libltdl/libltdl/lt__glibc.h	46;"	d
argz_create_sep	../libltdl/argz.c	/^argz_create_sep (const char *str, int delim, char **pargz, size_t *pargz_len)$/;"	f	signature:(const char *str, int delim, char **pargz, size_t *pargz_len)
argz_create_sep	../libltdl/argz_.h	/^LT_SCOPE error_t argz_create_sep(const char *str, int delim,$/;"	p	signature:(const char *str, int delim, char **pargz, size_t *pargz_len)
argz_create_sep	../libltdl/libltdl/lt__glibc.h	47;"	d
argz_create_sep	../libltdl/libltdl/lt__glibc.h	48;"	d
argz_insert	../libltdl/argz.c	/^argz_insert (char **pargz, size_t *pargz_len, char *before, const char *entry)$/;"	f	signature:(char **pargz, size_t *pargz_len, char *before, const char *entry)
argz_insert	../libltdl/argz_.h	/^LT_SCOPE error_t argz_insert	(char **pargz, size_t *pargz_len,$/;"	p	signature:(char **pargz, size_t *pargz_len, char *before, const char *entry)
argz_insert	../libltdl/libltdl/lt__glibc.h	49;"	d
argz_insert	../libltdl/libltdl/lt__glibc.h	50;"	d
argz_len	../libltdl/argz.c	/^    size_t argz_len	= *pargz_len + entry_len;$/;"	l
argz_len	../libltdl/argz.c	/^  size_t argz_len;$/;"	l
argz_len	../libltdl/ltdl.c	/^  size_t  argz_len = 0;$/;"	l
argz_len	../libltdl/ltdl.c	/^  size_t argz_len	= 0;$/;"	l
argz_next	../libltdl/argz.c	/^argz_next (char *argz, size_t argz_len, const char *entry)$/;"	f	signature:(char *argz, size_t argz_len, const char *entry)
argz_next	../libltdl/argz_.h	/^LT_SCOPE char *	 argz_next	(char *argz, size_t argz_len,$/;"	p	signature:(char *argz, size_t argz_len, const char *entry)
argz_next	../libltdl/libltdl/lt__glibc.h	51;"	d
argz_next	../libltdl/libltdl/lt__glibc.h	52;"	d
argz_stringify	../libltdl/argz.c	/^argz_stringify (char *argz, size_t argz_len, int sep)$/;"	f	signature:(char *argz, size_t argz_len, int sep)
argz_stringify	../libltdl/argz_.h	/^LT_SCOPE void	 argz_stringify	(char *argz, size_t argz_len, int sep);$/;"	p	signature:(char *argz, size_t argz_len, int sep)
argz_stringify	../libltdl/libltdl/lt__glibc.h	53;"	d
argz_stringify	../libltdl/libltdl/lt__glibc.h	54;"	d
argzize_path	../libltdl/ltdl.c	/^argzize_path (const char *path, char **pargz, size_t *pargz_len)$/;"	f	file:	signature:(const char *path, char **pargz, size_t *pargz_len)
argzize_path	../libltdl/ltdl.c	/^static	int	argzize_path	      (const char *path,$/;"	p	file:	signature:(const char *path, char **pargz, size_t *pargz_len)
as_fn_append	../libltdl/configure	/^  as_fn_append ()$/;"	f
as_fn_arith	../libltdl/configure	/^  as_fn_arith ()$/;"	f
as_fn_error	../libltdl/configure	/^as_fn_error ()$/;"	f
as_fn_executable_p	../libltdl/configure	/^as_fn_executable_p ()$/;"	f
as_fn_exit	../libltdl/configure	/^as_fn_exit ()$/;"	f
as_fn_failure	../libltdl/configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	../libltdl/configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	../libltdl/configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	../libltdl/configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	../libltdl/configure	/^as_fn_set_status ()$/;"	f
as_fn_success	../libltdl/configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	../libltdl/configure	/^as_fn_unset ()$/;"	f
attempt	../libltdl/ltdl.c	/^  char *        attempt		= 0;$/;"	l
base	../libltdl/loaders/dyld.c	/^	      unsigned long base = ((dylib_command *) lc)->dylib.name.offset;$/;"	l
base_name	../libltdl/ltdl.c	/^  char *	base_name	= 0;$/;"	l
before	../libltdl/ltdl.c	/^  char *before = 0;$/;"	l
buf	../libltdl/ltdl.c	/^  char   *buf	    = 0;$/;"	l
buf_len	../libltdl/ltdl.c	/^  size_t buf_len    = 0;$/;"	l
canonical	../libltdl/ltdl.c	/^  char  *canonical	= 0;$/;"	l
canonical	../libltdl/ltdl.c	/^  char *	canonical	= 0;$/;"	l
canonical	../libltdl/ltdl.c	/^  char *canonical	= 0;$/;"	l
canonical	../libltdl/ltdl.c	/^  char *canonical = 0;$/;"	l
canonicalize_path	../libltdl/ltdl.c	/^canonicalize_path (const char *path, char **pcanonical)$/;"	f	file:	signature:(const char *path, char **pcanonical)
canonicalize_path	../libltdl/ltdl.c	/^static	int     canonicalize_path     (const char *path, char **pcanonical);$/;"	p	file:	signature:(const char *path, char **pcanonical)
check_connection	../modulatory_connection.h	/^            void check_connection( nest::Node& s,$/;"	f	class:mynest::ModulatoryConnection	access:public	signature:( nest::Node& s, nest::Node& t, nest::rport receptor_type, nest::double_t, const CommonPropertiesType& )
check_connection_	../modulatory_connection.h	/^                ConnectionBase::check_connection_( dummy_target, s, t, receptor_type );$/;"	p	class:mynest::ModulatoryConnection::ConnectionBase	signature:( dummy_target, s, t, receptor_type )
closedir	../libltdl/libltdl/lt__dirent.h	/^LT_SCOPE void		closedir	(DIR *entry);$/;"	p	signature:(DIR *entry)
closedir	../libltdl/libltdl/lt__dirent.h	58;"	d
closedir	../libltdl/lt__dirent.c	/^closedir (DIR *entry)$/;"	f	signature:(DIR *entry)
cmp	../libltdl/ltdl.c	/^	int cmp = strcmp (entry, before);$/;"	l
commandstring	../modmodule.cpp	/^mynest::ModModule::commandstring( void ) const$/;"	f	class:mynest::ModModule	signature:( void ) const
commandstring	../modmodule.h	/^  const std::string commandstring( void ) const;$/;"	p	class:mynest::ModModule	access:public	signature:( void ) const
compute_modulation	../da_connection.h	/^            virtual nest::double_t compute_modulation(nest::double_t modulation)$/;"	f	class:mynest::D1Connection	access:public	implementation:virtual	signature:(nest::double_t modulation)
compute_modulation	../da_connection.h	/^            virtual nest::double_t compute_modulation(nest::double_t modulation)$/;"	f	class:mynest::D2Connection	access:public	implementation:virtual	signature:(nest::double_t modulation)
compute_modulation	../modulatory_connection.h	/^            virtual nest::double_t compute_modulation(nest::double_t modulation)$/;"	f	class:mynest::ModulatoryConnection	access:public	implementation:virtual	signature:(nest::double_t modulation)
cookie	../libltdl/loaders/load_add_on.c	/^      int32 cookie = 0;$/;"	l
cur	../libltdl/loaders/loadlibrary.c	/^    lt_dlhandle cur = 0;$/;"	l
cur	../libltdl/lt_dlloader.c	/^      lt_dlhandle cur = handle;$/;"	l
cur	../libltdl/ltdl.c	/^	  lt_dlhandle cur = handles;$/;"	l
cur	../libltdl/ltdl.c	/^      lt_dlhandle cur = handle;$/;"	l
cur	../libltdl/ltdl.c	/^  lt_dlhandle cur = handle;$/;"	l
cur	../libltdl/ltdl.c	/^  lt_dlhandle cur = handles;$/;"	l
cur	../libltdl/ltdl.c	/^  lt_dlhandle cur, last;$/;"	l
d	../modulatory_connection.h	/^            DictionaryDatum d( new Dictionary );$/;"	p	signature:( new Dictionary )
d_name	../libltdl/libltdl/lt__dirent.h	/^  char d_name[LT_FILENAME_MAX];$/;"	m	struct:dirent	access:public
d_namlen	../libltdl/libltdl/lt__dirent.h	/^  int  d_namlen;$/;"	m	struct:dirent	access:public
data	../libltdl/libltdl/lt__private.h	/^  void *		data;$/;"	m	struct:__anon2	access:public
data	../libltdl/ltdl.c	/^      lt_user_data data = cur->vtable->dlloader_data;$/;"	l
data	../libltdl/ltdl.c	/^  lt_user_data data;$/;"	l
default_preloaded_symbols	../libltdl/loaders/preopen.c	/^static const	lt_dlsymlist   *default_preloaded_symbols	= 0;$/;"	v	file:
depcount	../libltdl/libltdl/lt__private.h	/^  int			depcount;	\/* number of dependencies *\/$/;"	m	struct:lt__handle	access:public
depcount	../libltdl/ltdl.c	/^  int   depcount = 0;$/;"	l
deplibs	../libltdl/libltdl/lt__private.h	/^  lt_dlhandle *		deplibs;	\/* dependencies *\/$/;"	m	struct:lt__handle	access:public
deplibs	../libltdl/ltdl.c	/^      char *	deplibs	 = 0;$/;"	l
dest	../libltdl/ltdl.c	/^    size_t dest = 0;$/;"	l
di	../modulatory_connection.h	/^            nest::long_t di = ( *d )[ "deliver_interval" ];$/;"	l
dir	../libltdl/ltdl.c	/^  char *	dir		= 0;$/;"	l
dir_len	../libltdl/ltdl.c	/^  size_t dir_len    = 0;$/;"	l
dir_name	../libltdl/ltdl.c	/^    char *dir_name = 0;$/;"	l
dirend	../libltdl/ltdl.c	/^      char *dirend = strrchr (filename, '\/');$/;"	l
dirent	../libltdl/libltdl/lt__dirent.h	/^struct dirent$/;"	s
dirent	../libltdl/libltdl/lt__dirent.h	54;"	d
dirent::d_name	../libltdl/libltdl/lt__dirent.h	/^  char d_name[LT_FILENAME_MAX];$/;"	m	struct:dirent	access:public
dirent::d_namlen	../libltdl/libltdl/lt__dirent.h	/^  int  d_namlen;$/;"	m	struct:dirent	access:public
dirlen	../libltdl/ltdl.c	/^      size_t dirlen = (1+ base_name) - canonical;$/;"	l
dirname_len	../libltdl/ltdl.c	/^  size_t   dirname_len	= LT_STRLEN (dirname);$/;"	l
dirp	../libltdl/ltdl.c	/^  DIR	*dirp	  = 0;$/;"	l
dlloader_data	../libltdl/libltdl/lt_dlloader.h	/^  lt_user_data		dlloader_data;$/;"	m	struct:__anon6	access:public
dlloader_exit	../libltdl/libltdl/lt_dlloader.h	/^  lt_dlloader_exit *	dlloader_exit;$/;"	m	struct:__anon6	access:public
dlloader_init	../libltdl/libltdl/lt_dlloader.h	/^  lt_dlloader_init *	dlloader_init;$/;"	m	struct:__anon6	access:public
dlname	../libltdl/ltdl.c	/^      char *	dlname	 = 0;$/;"	l
dp	../libltdl/ltdl.c	/^      struct dirent *dp	= 0;$/;"	l
dummy_target	../modulatory_connection.h	/^                ConnTestDummyNode dummy_target;$/;"	l
dyld_cannot_close	../libltdl/loaders/dyld.c	/^static int dyld_cannot_close				  = 0;$/;"	v	file:
dylderror	../libltdl/loaders/dyld.c	/^dylderror (const char *errmsg)$/;"	f	file:	signature:(const char *errmsg)
dylderror	../libltdl/loaders/dyld.c	/^static const char *dylderror (const char *errmsg);$/;"	p	file:	signature:(const char *errmsg)
dylib_command	../libltdl/loaders/dyld.c	/^typedef struct dylib_command dylib_command;$/;"	t	typeref:struct:dylib_command	file:
end	../libltdl/ltdl.c	/^	  char *end = p+1;$/;"	l
end	../libltdl/ltdl.c	/^  char   *end	    = 0;$/;"	l
end	../libltdl/ltdl.c	/^  const char *end   = strrchr (str, '\\'');$/;"	l
end_offset	../libltdl/ltdl.c	/^  size_t end_offset = 0;$/;"	l
endl	../modulatory_connection.h	/^            std::cout << t_trig << " " <<  weight_  << std::endl;$/;"	m	class:mynest::std
entry	../libltdl/lt__dirent.c	/^  DIR *entry;$/;"	l
entry_len	../libltdl/argz.c	/^    size_t entry_len	= 1+ strlen (entry);$/;"	l
err	../libltdl/ltdl.c	/^	      const char *err;$/;"	l
errindex	../libltdl/lt_error.c	/^  int		errindex = 0;$/;"	l
errno	../libltdl/libltdl/lt__private.h	/^extern int errno;$/;"	x
error	../libltdl/ltdl.c	/^  const char *error = 0;$/;"	l
error	../libltdl/ltdl.c	/^  const char *error;$/;"	l
error	../libltdl/ltdl.c	/^  error_t error;$/;"	l
error	../libltdl/ltdl.c	/^  int      error	= 0;$/;"	l
error_message	../libltdl/loaders/loadlibrary.c	/^static char *error_message = 0;$/;"	v	file:
error_strings	../libltdl/lt_error.c	/^static const char	error_strings[LT_ERROR_MAX][LT_ERROR_LEN_MAX + 1] =$/;"	v	file:
errorcode	../libltdl/ltdl.c	/^      int errorcode = 0;$/;"	l
errorcount	../libltdl/lt_error.c	/^static	int		errorcount		= LT_ERROR_MAX;$/;"	v	file:
errormode	../libltdl/loaders/loadlibrary.c	/^    DWORD errormode = getthreaderrormode ();$/;"	l
errors	../libltdl/loaders/dld_link.c	/^  int errors = 0;$/;"	l
errors	../libltdl/loaders/dlopen.c	/^  int errors = 0;$/;"	l
errors	../libltdl/loaders/dyld.c	/^  int errors = 0;$/;"	l
errors	../libltdl/loaders/load_add_on.c	/^  int errors = 0;$/;"	l
errors	../libltdl/loaders/loadlibrary.c	/^  int errors = 0;$/;"	l
errors	../libltdl/loaders/preopen.c	/^  int		 errors   = 0;$/;"	l
errors	../libltdl/loaders/preopen.c	/^  int		 errors = 0;$/;"	l
errors	../libltdl/loaders/preopen.c	/^  int errors = 0;$/;"	l
errors	../libltdl/loaders/shl_load.c	/^  int errors = 0;$/;"	l
errors	../libltdl/lt_error.c	/^  int		errors	 = 0;$/;"	l
errors	../libltdl/ltdl.c	/^  int		errors		= 0;$/;"	l
errors	../libltdl/ltdl.c	/^  int		errors	= 0;$/;"	l
errors	../libltdl/ltdl.c	/^  int		errors = 0;$/;"	l
errors	../libltdl/ltdl.c	/^  int	       errors   = 0;$/;"	l
errors	../libltdl/ltdl.c	/^  int	errors	= 0;$/;"	l
errors	../libltdl/ltdl.c	/^  int	errors = 0;$/;"	l
errors	../libltdl/ltdl.c	/^  int    errors		= 0;$/;"	l
errors	../libltdl/ltdl.c	/^  int    errors	    = 0;$/;"	l
errors	../libltdl/ltdl.c	/^  int    errors	  = 0;$/;"	l
errors	../libltdl/ltdl.c	/^  int   errors	    = 0;$/;"	l
errors	../libltdl/ltdl.c	/^  int errors = 0;$/;"	l
errstr	../libltdl/loaders/dyld.c	/^  const char *errstr;$/;"	l
ext	../libltdl/loaders/loadlibrary.c	/^  char		*ext;$/;"	l
ext	../libltdl/ltdl.c	/^  const char *	ext     = 0;$/;"	l
fallback_getthreaderrormode	../libltdl/loaders/loadlibrary.c	/^fallback_getthreaderrormode (void)$/;"	f	file:	signature:(void)
fallback_getthreaderrormode	../libltdl/loaders/loadlibrary.c	/^static DWORD WINAPI fallback_getthreaderrormode (void);$/;"	p	file:	signature:(void)
fallback_setthreaderrormode	../libltdl/loaders/loadlibrary.c	/^fallback_setthreaderrormode (DWORD mode, DWORD *oldmode)$/;"	f	file:	signature:(DWORD mode, DWORD *oldmode)
fallback_setthreaderrormode	../libltdl/loaders/loadlibrary.c	/^static BOOL WINAPI fallback_setthreaderrormode (DWORD mode, DWORD *oldmode);$/;"	p	file:	signature:(DWORD mode, DWORD *oldmode)
file	../libltdl/loaders/dyld.c	/^  const char *file;$/;"	l
file	../libltdl/ltdl.c	/^      FILE *	file	 = 0;$/;"	l
file	../libltdl/ltdl.c	/^  FILE *file = 0;$/;"	l
file_info	../libltdl/libltdl/lt__dirent.h	/^  struct dirent file_info;$/;"	m	struct:__anon3	typeref:struct:__anon3::dirent	access:public
file_not_found	../libltdl/ltdl.c	/^file_not_found (void)$/;"	f	file:	signature:(void)
file_not_found	../libltdl/ltdl.c	/^static	int	file_not_found	      (void);$/;"	p	file:	signature:(void)
file_spec	../libltdl/lt__dirent.c	/^  char file_spec[LT_FILENAME_MAX];$/;"	l
file_worker_func	../libltdl/ltdl.c	/^typedef int	file_worker_func      (const char *filename, void *data);$/;"	t	file:
filename	../libltdl/ltdl.c	/^    char *filename = 0;$/;"	l
filename	../libltdl/ltdl.c	/^  char     *filename	= 0;$/;"	l
filename	../libltdl/ltdl.c	/^  char *filename	= 0;$/;"	l
filename	../libltdl/ltdl.h	/^  char *	filename;	\/* file name *\/$/;"	m	struct:__anon8	access:public
filename_len	../libltdl/ltdl.c	/^  size_t   filename_len	= 0;$/;"	l
filenamesize	../libltdl/ltdl.c	/^  size_t filenamesize	= 0;$/;"	l
find_file	../libltdl/ltdl.c	/^find_file (const char *search_path, const char *base_name, char **pdir)$/;"	f	file:	signature:(const char *search_path, const char *base_name, char **pdir)
find_file	../libltdl/ltdl.c	/^static	FILE   *find_file	      (const char *search_path,$/;"	p	file:	signature:(const char *search_path, const char *base_name, char **pdir)
find_file_callback	../libltdl/ltdl.c	/^find_file_callback (char *filename, void *data1, void *data2)$/;"	f	file:	signature:(char *filename, void *data1, void *data2)
find_file_callback	../libltdl/ltdl.c	/^static	int	find_file_callback    (char *filename, void *data1,$/;"	p	file:	signature:(char *filename, void *data1, void *data2)
find_handle	../libltdl/ltdl.c	/^find_handle (const char *search_path, const char *base_name,$/;"	f	file:	signature:(const char *search_path, const char *base_name, lt_dlhandle *phandle, lt_dladvise advise)
find_handle	../libltdl/ltdl.c	/^static	lt_dlhandle *find_handle      (const char *search_path,$/;"	p	file:	signature:(const char *search_path, const char *base_name, lt_dlhandle *handle, lt_dladvise advise)
find_handle_callback	../libltdl/ltdl.c	/^find_handle_callback (char *filename, void *data, void *data2)$/;"	f	file:	signature:(char *filename, void *data, void *data2)
find_handle_callback	../libltdl/ltdl.c	/^static	int	find_handle_callback  (char *filename, void *data,$/;"	p	file:	signature:(char *filename, void *data, void *ignored)
find_module	../libltdl/ltdl.c	/^find_module (lt_dlhandle *handle, const char *dir, const char *libdir,$/;"	f	file:	signature:(lt_dlhandle *handle, const char *dir, const char *libdir, const char *dlname, const char *old_name, int installed, lt_dladvise advise)
find_module	../libltdl/ltdl.c	/^static	int	find_module	      (lt_dlhandle *handle, const char *dir,$/;"	p	file:	signature:(lt_dlhandle *handle, const char *dir, const char *libdir, const char *dlname, const char *old_name, int installed, lt_dladvise advise)
find_sym	../libltdl/libltdl/lt_dlloader.h	/^  lt_find_sym *		find_sym;$/;"	m	struct:__anon6	access:public
firsttime	../libltdl/libltdl/lt__dirent.h	/^  BOOL firsttime;$/;"	m	struct:__anon3	access:public
flags	../libltdl/libltdl/lt__private.h	/^  int			flags;		\/* various boolean stats *\/$/;"	m	struct:lt__handle	access:public
flags	../libltdl/loaders/dyld.c	/^      int flags = 0;$/;"	l
foreach_callback_func	../libltdl/ltdl.c	/^typedef int	foreach_callback_func (char *filename, void *data1,$/;"	t	file:
foreach_dirinpath	../libltdl/ltdl.c	/^foreach_dirinpath (const char *search_path, const char *base_name,$/;"	f	file:	signature:(const char *search_path, const char *base_name, foreach_callback_func *func, void *data1, void *data2)
foreach_dirinpath	../libltdl/ltdl.c	/^static	int	foreach_dirinpath     (const char *search_path,$/;"	p	file:	signature:(const char *search_path, const char *base_name, foreach_callback_func *func, void *data1, void *data2)
foreachfile_callback	../libltdl/ltdl.c	/^foreachfile_callback (char *dirname, void *data1, void *data2)$/;"	f	file:	signature:(char *dirname, void *data1, void *data2)
foreachfile_callback	../libltdl/ltdl.c	/^static	int	foreachfile_callback  (char *filename, void *data1,$/;"	p	file:	signature:(char *filename, void *data1, void *data2)
found	../libltdl/loaders/preopen.c	/^  int		 found  = 0;$/;"	l
fpptr	../libltdl/ltdl.c	/^  file_worker_func **fpptr = &func;$/;"	l
free_symlists	../libltdl/loaders/preopen.c	/^free_symlists (void)$/;"	f	file:	signature:(void)
free_symlists	../libltdl/loaders/preopen.c	/^static int free_symlists (void);$/;"	p	file:	signature:(void)
func	../libltdl/ltdl.c	/^  file_worker_func *func = *(file_worker_func **) data1;$/;"	l
func_append	../libltdl/config/ltmain.sh	/^func_append ()$/;"	f
func_append	../libltdl/configure	/^func_append ()\\$/;"	f
func_append_quoted	../libltdl/config/ltmain.sh	/^func_append_quoted ()$/;"	f
func_append_quoted	../libltdl/configure	/^func_append_quoted ()\\$/;"	f
func_arith	../libltdl/config/ltmain.sh	/^func_arith ()$/;"	f
func_arith	../libltdl/configure	/^func_arith ()\\$/;"	f
func_basename	../libltdl/config/ltmain.sh	/^func_basename ()$/;"	f
func_basename	../libltdl/configure	/^func_basename ()\\$/;"	f
func_check_version_match	../libltdl/config/ltmain.sh	/^func_check_version_match ()$/;"	f
func_cl_dashL	../libltdl/config/compile	/^func_cl_dashL ()$/;"	f
func_cl_dashl	../libltdl/config/compile	/^func_cl_dashl ()$/;"	f
func_cl_wrapper	../libltdl/config/compile	/^func_cl_wrapper ()$/;"	f
func_config	../libltdl/config/ltmain.sh	/^func_config ()$/;"	f
func_convert_core_file_wine_to_w32	../libltdl/config/ltmain.sh	/^func_convert_core_file_wine_to_w32 ()$/;"	f
func_convert_core_msys_to_w32	../libltdl/config/ltmain.sh	/^func_convert_core_msys_to_w32 ()$/;"	f
func_convert_core_path_wine_to_w32	../libltdl/config/ltmain.sh	/^func_convert_core_path_wine_to_w32 ()$/;"	f
func_convert_file_check	../libltdl/config/ltmain.sh	/^func_convert_file_check ()$/;"	f
func_convert_file_cygwin_to_w32	../libltdl/config/ltmain.sh	/^func_convert_file_cygwin_to_w32 ()$/;"	f
func_convert_file_msys_to_cygwin	../libltdl/config/ltmain.sh	/^func_convert_file_msys_to_cygwin ()$/;"	f
func_convert_file_msys_to_w32	../libltdl/config/ltmain.sh	/^func_convert_file_msys_to_w32 ()$/;"	f
func_convert_file_nix_to_cygwin	../libltdl/config/ltmain.sh	/^func_convert_file_nix_to_cygwin ()$/;"	f
func_convert_file_nix_to_w32	../libltdl/config/ltmain.sh	/^func_convert_file_nix_to_w32 ()$/;"	f
func_convert_file_noop	../libltdl/config/ltmain.sh	/^func_convert_file_noop ()$/;"	f
func_convert_path_check	../libltdl/config/ltmain.sh	/^func_convert_path_check ()$/;"	f
func_convert_path_cygwin_to_w32	../libltdl/config/ltmain.sh	/^func_convert_path_cygwin_to_w32 ()$/;"	f
func_convert_path_front_back_pathsep	../libltdl/config/ltmain.sh	/^func_convert_path_front_back_pathsep ()$/;"	f
func_convert_path_msys_to_cygwin	../libltdl/config/ltmain.sh	/^func_convert_path_msys_to_cygwin ()$/;"	f
func_convert_path_msys_to_w32	../libltdl/config/ltmain.sh	/^func_convert_path_msys_to_w32 ()$/;"	f
func_convert_path_nix_to_cygwin	../libltdl/config/ltmain.sh	/^func_convert_path_nix_to_cygwin ()$/;"	f
func_convert_path_nix_to_w32	../libltdl/config/ltmain.sh	/^func_convert_path_nix_to_w32 ()$/;"	f
func_convert_path_noop	../libltdl/config/ltmain.sh	/^func_convert_path_noop ()$/;"	f
func_cygming_dll_for_implib	../libltdl/config/ltmain.sh	/^func_cygming_dll_for_implib ()$/;"	f
func_cygming_dll_for_implib_fallback	../libltdl/config/ltmain.sh	/^func_cygming_dll_for_implib_fallback ()$/;"	f
func_cygming_dll_for_implib_fallback_core	../libltdl/config/ltmain.sh	/^func_cygming_dll_for_implib_fallback_core ()$/;"	f
func_cygming_gnu_implib_p	../libltdl/config/ltmain.sh	/^func_cygming_gnu_implib_p ()$/;"	f
func_cygming_ms_implib_p	../libltdl/config/ltmain.sh	/^func_cygming_ms_implib_p ()$/;"	f
func_cygpath	../libltdl/config/ltmain.sh	/^func_cygpath ()$/;"	f
func_dirname	../libltdl/config/ltmain.sh	/^func_dirname ()$/;"	f
func_dirname	../libltdl/configure	/^func_dirname ()\\$/;"	f
func_dirname_and_basename	../libltdl/config/ltmain.sh	/^func_dirname_and_basename ()$/;"	f
func_dirname_and_basename	../libltdl/configure	/^func_dirname_and_basename ()\\$/;"	f
func_echo	../libltdl/config/ltmain.sh	/^func_echo ()$/;"	f
func_echo_all	../libltdl/config/ltmain.sh	/^func_echo_all ()$/;"	f
func_echo_all	../libltdl/configure	/^func_echo_all ()$/;"	f
func_emit_cwrapperexe_src	../libltdl/config/ltmain.sh	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_wrapper	../libltdl/config/ltmain.sh	/^func_emit_wrapper ()$/;"	f
func_enable_tag	../libltdl/config/ltmain.sh	/^func_enable_tag ()$/;"	f
func_error	../libltdl/config/ltmain.sh	/^func_error ()$/;"	f
func_exec_program	../libltdl/config/ltmain.sh	/^func_exec_program ()$/;"	f
func_exec_program_core	../libltdl/config/ltmain.sh	/^func_exec_program_core ()$/;"	f
func_execute_cmds	../libltdl/config/ltmain.sh	/^func_execute_cmds ()$/;"	f
func_extract_an_archive	../libltdl/config/ltmain.sh	/^func_extract_an_archive ()$/;"	f
func_extract_archives	../libltdl/config/ltmain.sh	/^func_extract_archives ()$/;"	f
func_fallback_echo	../libltdl/config/ltmain.sh	/^func_fallback_echo ()$/;"	f
func_fallback_echo	../libltdl/configure	/^  func_fallback_echo ()$/;"	f
func_fallback_echo	../libltdl/configure	/^func_fallback_echo ()$/;"	f
func_fatal_configuration	../libltdl/config/ltmain.sh	/^func_fatal_configuration ()$/;"	f
func_fatal_error	../libltdl/config/ltmain.sh	/^func_fatal_error ()$/;"	f
func_fatal_help	../libltdl/config/ltmain.sh	/^func_fatal_help ()$/;"	f
func_features	../libltdl/config/ltmain.sh	/^func_features ()$/;"	f
func_file_conv	../libltdl/config/compile	/^func_file_conv ()$/;"	f
func_generate_dlsyms	../libltdl/config/ltmain.sh	/^func_generate_dlsyms ()$/;"	f
func_grep	../libltdl/config/ltmain.sh	/^func_grep ()$/;"	f
func_help	../libltdl/config/ltmain.sh	/^func_help ()$/;"	f
func_infer_tag	../libltdl/config/ltmain.sh	/^func_infer_tag ()$/;"	f
func_init_to_host_path_cmd	../libltdl/config/ltmain.sh	/^func_init_to_host_path_cmd ()$/;"	f
func_lalib_p	../libltdl/config/ltmain.sh	/^func_lalib_p ()$/;"	f
func_lalib_unsafe_p	../libltdl/config/ltmain.sh	/^func_lalib_unsafe_p ()$/;"	f
func_len	../libltdl/config/ltmain.sh	/^func_len ()$/;"	f
func_len	../libltdl/configure	/^func_len ()\\$/;"	f
func_lo2o	../libltdl/config/ltmain.sh	/^func_lo2o ()$/;"	f
func_lo2o	../libltdl/configure	/^func_lo2o ()\\$/;"	f
func_lt_dump_args	../libltdl/config/ltmain.sh	/^func_lt_dump_args ()$/;"	f
func_ltwrapper_executable_p	../libltdl/config/ltmain.sh	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_p	../libltdl/config/ltmain.sh	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_script_p	../libltdl/config/ltmain.sh	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_scriptname	../libltdl/config/ltmain.sh	/^func_ltwrapper_scriptname ()$/;"	f
func_missing_arg	../libltdl/config/ltmain.sh	/^func_missing_arg ()$/;"	f
func_mkdir_p	../libltdl/config/ltmain.sh	/^func_mkdir_p ()$/;"	f
func_mktempdir	../libltdl/config/ltmain.sh	/^func_mktempdir ()$/;"	f
func_mode_compile	../libltdl/config/ltmain.sh	/^func_mode_compile ()$/;"	f
func_mode_execute	../libltdl/config/ltmain.sh	/^func_mode_execute ()$/;"	f
func_mode_finish	../libltdl/config/ltmain.sh	/^func_mode_finish ()$/;"	f
func_mode_help	../libltdl/config/ltmain.sh	/^func_mode_help ()$/;"	f
func_mode_install	../libltdl/config/ltmain.sh	/^func_mode_install ()$/;"	f
func_mode_link	../libltdl/config/ltmain.sh	/^func_mode_link ()$/;"	f
func_mode_uninstall	../libltdl/config/ltmain.sh	/^func_mode_uninstall ()$/;"	f
func_normal_abspath	../libltdl/config/ltmain.sh	/^func_normal_abspath ()$/;"	f
func_parse_lt_options	../libltdl/config/ltmain.sh	/^func_parse_lt_options ()$/;"	f
func_quote_for_eval	../libltdl/config/ltmain.sh	/^func_quote_for_eval ()$/;"	f
func_quote_for_expand	../libltdl/config/ltmain.sh	/^func_quote_for_expand ()$/;"	f
func_relative_path	../libltdl/config/ltmain.sh	/^func_relative_path ()$/;"	f
func_replace_sysroot	../libltdl/config/ltmain.sh	/^func_replace_sysroot ()$/;"	f
func_resolve_sysroot	../libltdl/config/ltmain.sh	/^func_resolve_sysroot ()$/;"	f
func_show_eval	../libltdl/config/ltmain.sh	/^func_show_eval ()$/;"	f
func_show_eval_locale	../libltdl/config/ltmain.sh	/^func_show_eval_locale ()$/;"	f
func_source	../libltdl/config/ltmain.sh	/^func_source ()$/;"	f
func_split_long_opt	../libltdl/config/ltmain.sh	/^func_split_long_opt ()$/;"	f
func_split_long_opt	../libltdl/configure	/^func_split_long_opt ()\\$/;"	f
func_split_short_opt	../libltdl/config/ltmain.sh	/^func_split_short_opt ()$/;"	f
func_split_short_opt	../libltdl/configure	/^func_split_short_opt ()\\$/;"	f
func_stripname	../libltdl/config/ltmain.sh	/^func_stripname ()$/;"	f
func_stripname	../libltdl/configure	/^func_stripname ()\\$/;"	f
func_to_host_file	../libltdl/config/ltmain.sh	/^func_to_host_file ()$/;"	f
func_to_host_path	../libltdl/config/ltmain.sh	/^func_to_host_path ()$/;"	f
func_to_tool_file	../libltdl/config/ltmain.sh	/^func_to_tool_file ()$/;"	f
func_tr_sh	../libltdl/config/ltmain.sh	/^func_tr_sh ()$/;"	f
func_usage	../libltdl/config/ltmain.sh	/^func_usage ()$/;"	f
func_verbose	../libltdl/config/ltmain.sh	/^func_verbose ()$/;"	f
func_version	../libltdl/config/ltmain.sh	/^func_version ()$/;"	f
func_warning	../libltdl/config/ltmain.sh	/^func_warning ()$/;"	f
func_win32_import_lib_p	../libltdl/config/ltmain.sh	/^func_win32_import_lib_p ()$/;"	f
func_win32_libid	../libltdl/config/ltmain.sh	/^func_win32_libid ()$/;"	f
func_write_libtool_object	../libltdl/config/ltmain.sh	/^func_write_libtool_object ()$/;"	f
func_xform	../libltdl/config/ltmain.sh	/^func_xform ()$/;"	f
func_xform	../libltdl/configure	/^func_xform ()\\$/;"	f
get_delay_steps	../modulatory_connection.h	/^            e.set_delay( ConnectionBase::get_delay_steps() );$/;"	p	signature:()
get_network	../modmodule.cpp	/^    nest::NestModule::get_network(), "d1_synapse" );$/;"	p	class:nest	file:	signature:()
get_network	../modmodule.cpp	/^    nest::NestModule::get_network(), "d2_synapse" );$/;"	p	class:nest	file:	signature:()
get_network	../modmodule.cpp	/^    nest::NestModule::get_network(), "modulatory_synapse" );$/;"	p	class:nest	file:	signature:()
get_node	../modulatory_connection.cpp	/^    nest::Node* ModulatoryCommonProperties::get_node()$/;"	f	class:mynest::ModulatoryCommonProperties	signature:()
get_node	../modulatory_connection.h	/^            nest::Node* get_node();$/;"	p	class:mynest::ModulatoryCommonProperties	access:public	signature:()
get_rport	../modulatory_connection.h	/^            e.set_rport( ConnectionBase::get_rport() );$/;"	p	signature:()
get_status	../da_connection.h	/^            ConnectionBase::get_status( d );$/;"	p	class:mynest::ConnectionBase	signature:( d )
get_status	../da_connection.h	/^            void get_status( DictionaryDatum& d ) const;$/;"	p	class:mynest::D1Connection	access:public	signature:( DictionaryDatum& d ) const
get_status	../da_connection.h	/^            void get_status( DictionaryDatum& d ) const;$/;"	p	class:mynest::D2Connection	access:public	signature:( DictionaryDatum& d ) const
get_status	../da_connection.h	/^        void D1Connection< targetidentifierT >::get_status( DictionaryDatum& d ) const$/;"	f	class:mynest::D1Connection	signature:( DictionaryDatum& d ) const
get_status	../da_connection.h	/^        void D2Connection< targetidentifierT >::get_status( DictionaryDatum& d ) const$/;"	f	class:mynest::D2Connection	signature:( DictionaryDatum& d ) const
get_status	../modulatory_connection.cpp	/^        nest::CommonSynapseProperties::get_status( d );$/;"	p	class:mynest::nest::CommonSynapseProperties	file:	signature:( d )
get_status	../modulatory_connection.cpp	/^    void ModulatoryCommonProperties::get_status( DictionaryDatum& d ) const$/;"	f	class:mynest::ModulatoryCommonProperties	signature:( DictionaryDatum& d ) const
get_status	../modulatory_connection.h	/^            ConnectionBase::get_status( d );$/;"	p	class:mynest::ConnectionBase	signature:( d )
get_status	../modulatory_connection.h	/^            cp.vt_->get_status(d);$/;"	p	signature:(d)
get_status	../modulatory_connection.h	/^            void get_status( DictionaryDatum& d ) const;$/;"	p	class:mynest::ModulatoryCommonProperties	access:public	signature:( DictionaryDatum& d ) const
get_status	../modulatory_connection.h	/^            void get_status( DictionaryDatum& d ) const;$/;"	p	class:mynest::ModulatoryConnection	access:public	signature:( DictionaryDatum& d ) const
get_status	../modulatory_connection.h	/^        void ModulatoryConnection< targetidentifierT >::get_status( DictionaryDatum& d ) const$/;"	f	class:mynest::ModulatoryConnection	signature:( DictionaryDatum& d ) const
get_target	../modulatory_connection.h	/^            e.set_receiver( *ConnectionBase::get_target( t ) );$/;"	p	signature:(t )
get_vt_gid	../modulatory_connection.h	/^            nest::long_t get_vt_gid() const;$/;"	p	class:mynest::ModulatoryCommonProperties	access:public	signature:() const
get_vt_gid	../modulatory_connection.h	/^    inline nest::long_t ModulatoryCommonProperties::get_vt_gid() const$/;"	f	class:mynest::ModulatoryCommonProperties	signature:() const
get_vtable	../libltdl/loaders/dld_link.c	/^LT_SCOPE lt_dlvtable *get_vtable (lt_user_data loader_data);$/;"	p	file:	signature:(lt_user_data loader_data)
get_vtable	../libltdl/loaders/dld_link.c	/^get_vtable (lt_user_data loader_data)$/;"	f	signature:(lt_user_data loader_data)
get_vtable	../libltdl/loaders/dld_link.c	39;"	d	file:
get_vtable	../libltdl/loaders/dlopen.c	/^LT_SCOPE lt_dlvtable *get_vtable (lt_user_data loader_data);$/;"	p	file:	signature:(lt_user_data loader_data)
get_vtable	../libltdl/loaders/dlopen.c	/^get_vtable (lt_user_data loader_data)$/;"	f	signature:(lt_user_data loader_data)
get_vtable	../libltdl/loaders/dlopen.c	39;"	d	file:
get_vtable	../libltdl/loaders/dyld.c	/^LT_SCOPE lt_dlvtable *get_vtable (lt_user_data loader_data);$/;"	p	file:	signature:(lt_user_data loader_data)
get_vtable	../libltdl/loaders/dyld.c	/^get_vtable (lt_user_data loader_data)$/;"	f	signature:(lt_user_data loader_data)
get_vtable	../libltdl/loaders/dyld.c	39;"	d	file:
get_vtable	../libltdl/loaders/load_add_on.c	/^LT_SCOPE lt_dlvtable *get_vtable (lt_user_data loader_data);$/;"	p	file:	signature:(lt_user_data loader_data)
get_vtable	../libltdl/loaders/load_add_on.c	/^get_vtable (lt_user_data loader_data)$/;"	f	signature:(lt_user_data loader_data)
get_vtable	../libltdl/loaders/load_add_on.c	39;"	d	file:
get_vtable	../libltdl/loaders/loadlibrary.c	/^LT_SCOPE lt_dlvtable *get_vtable (lt_user_data loader_data);$/;"	p	file:	signature:(lt_user_data loader_data)
get_vtable	../libltdl/loaders/loadlibrary.c	/^get_vtable (lt_user_data loader_data)$/;"	f	signature:(lt_user_data loader_data)
get_vtable	../libltdl/loaders/loadlibrary.c	43;"	d	file:
get_vtable	../libltdl/loaders/preopen.c	/^LT_SCOPE lt_dlvtable *get_vtable (lt_user_data loader_data);$/;"	p	file:	signature:(lt_user_data loader_data)
get_vtable	../libltdl/loaders/preopen.c	/^get_vtable (lt_user_data loader_data)$/;"	f	signature:(lt_user_data loader_data)
get_vtable	../libltdl/loaders/preopen.c	39;"	d	file:
get_vtable	../libltdl/loaders/shl_load.c	/^LT_SCOPE lt_dlvtable *get_vtable (lt_user_data loader_data);$/;"	p	file:	signature:(lt_user_data loader_data)
get_vtable	../libltdl/loaders/shl_load.c	/^get_vtable (lt_user_data loader_data)$/;"	f	signature:(lt_user_data loader_data)
get_vtable	../libltdl/loaders/shl_load.c	39;"	d	file:
get_vtable	../libltdl/ltdl.c	/^LT_SCOPE const lt_dlvtable *	get_vtable (lt_user_data data);$/;"	p	file:	signature:(lt_user_data data)
get_vtable	../libltdl/ltdl.c	214;"	d	file:
getthreaderrormode	../libltdl/loaders/loadlibrary.c	/^static getthreaderrormode_type *getthreaderrormode = wrap_getthreaderrormode;$/;"	v	file:
getthreaderrormode_type	../libltdl/loaders/loadlibrary.c	/^typedef DWORD (WINAPI getthreaderrormode_type) (void);$/;"	t	file:
give_advice	../libltdl/config/missing	/^give_advice ()$/;"	f
hSearch	../libltdl/libltdl/lt__dirent.h	/^  HANDLE hSearch;$/;"	m	struct:__anon3	access:public
handle	../libltdl/loaders/preopen.c	/^		  lt_dlhandle handle = lt_dlopen (symbol->name);$/;"	l
handle	../libltdl/lt_dlloader.c	/^  lt_dlhandle		handle = 0;$/;"	l
handle	../libltdl/ltdl.c	/^  lt_dlhandle	handle		= handles;$/;"	l
handle	../libltdl/ltdl.c	/^  lt_dlhandle	handle	= 0;$/;"	l
handle	../libltdl/ltdl.c	/^  lt_dlhandle  handle   = handles;$/;"	l
handle	../libltdl/ltdl.c	/^  lt_dlhandle handle = 0;$/;"	l
handle	../libltdl/ltdl.c	/^  lt_dlhandle handle = place;$/;"	l
handle	../libltdl/ltdl.c	/^  lt_dlhandle handle;$/;"	l
handles	../libltdl/ltdl.c	/^static	lt_dlhandle	handles	= 0;$/;"	v	file:
handles_test_event	../modulatory_connection.h	/^                    nest::port handles_test_event( nest::DSSpikeEvent&, nest::rport )$/;"	f	class:mynest::ModulatoryConnection::ConnTestDummyNode	access:public	signature:( nest::DSSpikeEvent&, nest::rport )
handles_test_event	../modulatory_connection.h	/^                    nest::port handles_test_event( nest::SpikeEvent&, nest::rport )$/;"	f	class:mynest::ModulatoryConnection::ConnTestDummyNode	access:public	signature:( nest::SpikeEvent&, nest::rport )
has_library_ext	../libltdl/ltdl.c	/^has_library_ext (const char *filename)$/;"	f	file:	signature:(const char *filename)
has_library_ext	../libltdl/ltdl.c	/^static  int     has_library_ext       (const char *filename);$/;"	p	file:	signature:(const char *filename)
head	../libltdl/lt_dlloader.c	/^      const lt_dlvtable *head = (const lt_dlvtable *) loaders->userdata;$/;"	l
head	../libltdl/slist.c	/^      SList *head;$/;"	l
i	../libltdl/loaders/dyld.c	/^  int i = _dyld_image_count();$/;"	l
i	../libltdl/ltdl.c	/^      int i;$/;"	l
i	../libltdl/ltdl.c	/^    int i;$/;"	l
i	../libltdl/ltdl.c	/^  int	i;$/;"	l
i	../libltdl/ltdl.c	/^  int i;$/;"	l
id	../libltdl/loaders/dyld.c	/^      const char *id;$/;"	l
id_string	../libltdl/lt_dlloader.c	/^  static const char	id_string[] = "lt_dlloader_remove";$/;"	l	file:
id_string	../libltdl/ltdl.c	/^  const char *id_string;$/;"	m	struct:__anon1	file:	access:public
idx	../libltdl/loaders/preopen.c	/^	  unsigned int idx = 0;$/;"	l
iface	../libltdl/lt_dlloader.c	/^  lt_dlinterface_id	iface;$/;"	l
iface	../libltdl/ltdl.c	/^  lt_dlhandle_interface *iface;$/;"	m	struct:__anon1	file:	access:public
iface_id	../libltdl/loaders/loadlibrary.c	/^static lt_dlinterface_id iface_id = 0;$/;"	v	file:
image	../libltdl/loaders/load_add_on.c	/^  image_id image = (image_id) module;$/;"	l
image	../libltdl/loaders/load_add_on.c	/^  image_id image = 0;$/;"	l
in_use	../libltdl/lt_dlloader.c	/^  int			in_use = 0;$/;"	l
in_use_by_resident	../libltdl/lt_dlloader.c	/^  int			in_use_by_resident = 0;$/;"	l
info	../libltdl/libltdl/lt__private.h	/^  lt_dlinfo		info;		\/* user visible fields *\/$/;"	m	struct:lt__handle	access:public
info	../libltdl/loaders/load_add_on.c	/^      image_info info;$/;"	l
init	../modmodule.cpp	/^mynest::ModModule::init( SLIInterpreter* i )$/;"	f	class:mynest::ModModule	signature:( SLIInterpreter* i )
init	../modmodule.h	/^  void init( SLIInterpreter* );$/;"	p	class:mynest::ModModule	access:public	signature:( SLIInterpreter* )
initial_weight_	../modulatory_connection.h	/^            nest::double_t initial_weight_; \/\/!< Initial synaptic weight$/;"	m	class:mynest::ModulatoryConnection	access:private
initialized	../libltdl/ltdl.c	/^static	int		initialized	= 0;$/;"	v	file:
insert	../libltdl/slist.c	/^  SList merged, *insert;$/;"	l
installed	../libltdl/ltdl.c	/^      int	installed = 1;$/;"	l
interface_data	../libltdl/libltdl/lt__private.h	/^  lt_interface_data *	interface_data;	\/* per caller associated data *\/$/;"	m	struct:lt__handle	access:public
interface_id	../libltdl/ltdl.c	/^  lt__interface_id *interface_id = (lt__interface_id *) lt__malloc (sizeof *interface_id);$/;"	l
interface_id	../libltdl/ltdl.c	/^  lt__interface_id *interface_id = (lt__interface_id *)key;$/;"	l
is_done	../libltdl/ltdl.c	/^  int	     is_done	= 0;$/;"	l
is_done	../libltdl/ltdl.c	/^  int	  is_done  = 0;$/;"	l
is_done	../libltdl/ltdl.c	/^  int is_done = 0;$/;"	l
is_resident	../libltdl/libltdl/lt__private.h	/^  unsigned int	is_resident:1;	\/* module can't be unloaded. *\/$/;"	m	struct:lt__advise	access:public
is_resident	../libltdl/ltdl.h	/^  unsigned int	is_resident:1;	\/* module can't be unloaded. *\/$/;"	m	struct:__anon8	access:public
is_symglobal	../libltdl/libltdl/lt__private.h	/^  unsigned int	is_symglobal:1;	\/* module symbols can satisfy$/;"	m	struct:lt__advise	access:public
is_symglobal	../libltdl/ltdl.h	/^  unsigned int	is_symglobal:1;	\/* module symbols can satisfy$/;"	m	struct:__anon8	access:public
is_symlocal	../libltdl/libltdl/lt__private.h	/^  unsigned int	is_symlocal:1;	\/* module symbols are only available$/;"	m	struct:lt__advise	access:public
is_symlocal	../libltdl/ltdl.h	/^  unsigned int	is_symlocal:1;	\/* module symbols are only available$/;"	m	struct:__anon8	access:public
item	../libltdl/lt_dlloader.c	/^  SList *item = (SList *) loader;$/;"	l
item	../libltdl/lt_dlloader.c	/^  SList *item;$/;"	l
item	../libltdl/slist.c	/^  SList *item = (SList *) malloc (sizeof *item);$/;"	l
iterator	../libltdl/ltdl.c	/^  lt__interface_id *iterator = (lt__interface_id *) iface;$/;"	l
j	../libltdl/loaders/dyld.c	/^      int j;$/;"	l
j	../libltdl/loaders/dyld.c	/^  int j;$/;"	l
j	../libltdl/ltdl.c	/^      int	j = 0;$/;"	l
kernel32	../libltdl/loaders/loadlibrary.c	/^  HMODULE kernel32 = GetModuleHandleA ("kernel32.dll");$/;"	l
key	../libltdl/libltdl/lt__private.h	/^  lt_dlinterface_id	key;$/;"	m	struct:__anon2	access:public
last	../libltdl/ltdl.c	/^  lt_dlhandle cur, last;$/;"	l
last	../libltdl/slist.c	/^  SList *last;$/;"	l
last_error	../libltdl/loaders/loadlibrary.c	/^    DWORD last_error;$/;"	l
last_error	../libltdl/lt_error.c	/^static const char	*last_error	= 0;$/;"	v	file:
last_libname	../libltdl/ltdl.c	/^	  char *last_libname;$/;"	l
lc	../libltdl/loaders/dyld.c	/^      struct load_command *lc;$/;"	l
left	../libltdl/slist.c	/^  SList *left, *right;$/;"	l
len	../libltdl/loaders/loadlibrary.c	/^  size_t	len;$/;"	l
len	../libltdl/loaders/loadlibrary.c	/^  size_t len;$/;"	l
len	../libltdl/ltdl.c	/^  size_t len	    = LT_STRLEN (str);$/;"	l
lenbase	../libltdl/ltdl.c	/^  size_t lenbase	= LT_STRLEN (base_name);$/;"	l
lendir	../libltdl/ltdl.c	/^	size_t lendir = LT_STRLEN (dir_name);$/;"	l
length	../libltdl/lt__strl.c	/^  size_t length;$/;"	l
length	../libltdl/lt__strl.c	/^  size_t length=0;$/;"	l
lensym	../libltdl/ltdl.c	/^  size_t lensym;$/;"	l
ler	../libltdl/loaders/dyld.c	/^  NSLinkEditErrors ler;$/;"	l
lerno	../libltdl/loaders/dyld.c	/^  int lerno;$/;"	l
level	../libltdl/ltdl.c	/^      int	level;$/;"	l
libdir	../libltdl/ltdl.c	/^      char *	libdir	 = 0;$/;"	l
libext	../libltdl/ltdl.c	/^static  const char	libext[]		= LT_LIBEXT;$/;"	v	file:
libprefix	../libltdl/ltdl.c	/^static  const char	libprefix[]		= LT_LIBPREFIX;$/;"	v	file:
line	../libltdl/ltdl.c	/^  char *	line = MALLOC (char, line_len);$/;"	l
line_len	../libltdl/ltdl.c	/^  size_t	line_len = LT_FILENAME_MAX;$/;"	l
list	../libltdl/loaders/preopen.c	/^  symlist_chain *list;$/;"	l
list_files_by_dir	../libltdl/ltdl.c	/^list_files_by_dir (const char *dirnam, char **pargz, size_t *pargz_len)$/;"	f	file:	signature:(const char *dirnam, char **pargz, size_t *pargz_len)
list_files_by_dir	../libltdl/ltdl.c	/^static	int	list_files_by_dir     (const char *dirnam,$/;"	p	file:	signature:(const char *dirnam, char **pargz, size_t *pargz_len)
lists	../libltdl/loaders/preopen.c	/^  symlist_chain *lists;$/;"	l
load_deplibs	../libltdl/ltdl.c	/^load_deplibs (lt_dlhandle handle, char * LT__UNUSED deplibs)$/;"	f	file:	signature:(lt_dlhandle handle, char * LT__UNUSED deplibs)
load_deplibs	../libltdl/ltdl.c	/^load_deplibs (lt_dlhandle handle, char *deplibs)$/;"	f	file:	signature:(lt_dlhandle handle, char *deplibs)
load_deplibs	../libltdl/ltdl.c	/^static	int	load_deplibs	      (lt_dlhandle handle,  char *deplibs);$/;"	p	file:	signature:(lt_dlhandle handle, char *deplibs)
loader	../libltdl/ltdl.c	/^    lt_dlloader loader = lt_dlloader_next (0);$/;"	l
loader	../libltdl/ltdl.c	/^  lt_dlloader *loader   = 0;$/;"	l
loader_callback	../libltdl/lt_dlloader.c	/^loader_callback (SList *item, void *userdata)$/;"	f	file:	signature:(SList *item, void *userdata)
loader_callback	../libltdl/lt_dlloader.c	/^static void *	loader_callback (SList *item, void *userdata);$/;"	p	file:	signature:(SList *item, void *userdata)
loader_dump_callback	../libltdl/lt_dlloader.c	/^	slist_foreach (slist_tail (loaders), loader_dump_callback, NULL);$/;"	l
loader_dump_callback	../libltdl/lt_dlloader.c	/^loader_dump_callback (SList *item, void *userdata)$/;"	f	file:	signature:(SList *item, void *userdata)
loader_init	../libltdl/ltdl.c	/^loader_init (lt_get_vtable *vtable_func, lt_user_data data)$/;"	f	file:	signature:(lt_get_vtable *vtable_func, lt_user_data data)
loader_init	../libltdl/ltdl.c	/^static	int	loader_init	      (lt_get_vtable *vtable_func,$/;"	p	file:	signature:(lt_get_vtable *vtable_func, lt_user_data data)
loader_init_callback	../libltdl/ltdl.c	/^loader_init_callback (lt_dlhandle handle)$/;"	f	file:	signature:(lt_dlhandle handle)
loader_init_callback	../libltdl/ltdl.c	/^static	int	loader_init_callback  (lt_dlhandle handle);$/;"	p	file:	signature:(lt_dlhandle handle)
loader_vtable	../libltdl/ltdl.c	/^    const lt_dlvtable *loader_vtable;$/;"	l
loaders	../libltdl/lt_dlloader.c	/^static	SList    *loaders		= 0;$/;"	v	file:
loadlibraryerror	../libltdl/loaders/loadlibrary.c	/^loadlibraryerror (const char *default_errmsg)$/;"	f	file:	signature:(const char *default_errmsg)
loadlibraryerror	../libltdl/loaders/loadlibrary.c	/^static const char *loadlibraryerror (const char *default_errmsg);$/;"	p	file:	signature:(const char *default_errmsg)
lsym	../libltdl/ltdl.c	/^  char	lsym[LT_SYMBOL_LENGTH];$/;"	l
lt__PROGRAM__LTX_preloaded_symbols	../libltdl/ltdl.h	/^extern LT_DLSYM_CONST lt_dlsymlist lt__PROGRAM__LTX_preloaded_symbols[];$/;"	x
lt__addimage	../libltdl/loaders/dyld.c	/^static const mach_header *(*lt__addimage)	(const char *image_name,$/;"	v	file:
lt__advise	../libltdl/libltdl/lt__private.h	/^struct lt__advise {$/;"	s
lt__advise::is_resident	../libltdl/libltdl/lt__private.h	/^  unsigned int	is_resident:1;	\/* module can't be unloaded. *\/$/;"	m	struct:lt__advise	access:public
lt__advise::is_symglobal	../libltdl/libltdl/lt__private.h	/^  unsigned int	is_symglobal:1;	\/* module symbols can satisfy$/;"	m	struct:lt__advise	access:public
lt__advise::is_symlocal	../libltdl/libltdl/lt__private.h	/^  unsigned int	is_symlocal:1;	\/* module symbols are only available$/;"	m	struct:lt__advise	access:public
lt__advise::try_ext	../libltdl/libltdl/lt__private.h	/^  unsigned int	try_ext:1;	\/* try system library extensions.  *\/$/;"	m	struct:lt__advise	access:public
lt__advise::try_preload_only	../libltdl/libltdl/lt__private.h	/^  unsigned int	try_preload_only:1;\/* only preloaded modules will be tried. *\/$/;"	m	struct:lt__advise	access:public
lt__alloc_die	../libltdl/libltdl/lt__alloc.h	/^LT_SCOPE void (*lt__alloc_die) (void);$/;"	v
lt__alloc_die	../libltdl/lt__alloc.c	/^void (*lt__alloc_die) (void) = alloc_die_default;$/;"	v
lt__alloc_die_callback	../libltdl/libltdl/lt__private.h	/^LT_SCOPE void	lt__alloc_die_callback (void);$/;"	p	signature:(void)
lt__alloc_die_callback	../libltdl/ltdl.c	/^lt__alloc_die_callback (void)$/;"	f	signature:(void)
lt__error_string	../libltdl/libltdl/lt__private.h	/^LT_SCOPE const char *lt__error_string	(int errorcode);$/;"	p	signature:(int errorcode)
lt__error_string	../libltdl/lt_error.c	/^lt__error_string (int errorcode)$/;"	f	signature:(int errorcode)
lt__get_last_error	../libltdl/libltdl/lt__private.h	/^LT_SCOPE const char *lt__get_last_error	(void);$/;"	p	signature:(void)
lt__get_last_error	../libltdl/lt_error.c	/^lt__get_last_error (void)$/;"	f	signature:(void)
lt__handle	../libltdl/libltdl/lt__private.h	/^struct lt__handle {$/;"	s
lt__handle::depcount	../libltdl/libltdl/lt__private.h	/^  int			depcount;	\/* number of dependencies *\/$/;"	m	struct:lt__handle	access:public
lt__handle::deplibs	../libltdl/libltdl/lt__private.h	/^  lt_dlhandle *		deplibs;	\/* dependencies *\/$/;"	m	struct:lt__handle	access:public
lt__handle::flags	../libltdl/libltdl/lt__private.h	/^  int			flags;		\/* various boolean stats *\/$/;"	m	struct:lt__handle	access:public
lt__handle::info	../libltdl/libltdl/lt__private.h	/^  lt_dlinfo		info;		\/* user visible fields *\/$/;"	m	struct:lt__handle	access:public
lt__handle::interface_data	../libltdl/libltdl/lt__private.h	/^  lt_interface_data *	interface_data;	\/* per caller associated data *\/$/;"	m	struct:lt__handle	access:public
lt__handle::module	../libltdl/libltdl/lt__private.h	/^  lt_module		module;		\/* system module handle *\/$/;"	m	struct:lt__handle	access:public
lt__handle::next	../libltdl/libltdl/lt__private.h	/^  lt_dlhandle		next;$/;"	m	struct:lt__handle	access:public
lt__handle::system	../libltdl/libltdl/lt__private.h	/^  void *		system;		\/* system specific data *\/$/;"	m	struct:lt__handle	access:public
lt__handle::vtable	../libltdl/libltdl/lt__private.h	/^  const lt_dlvtable *	vtable;		\/* dlopening interface *\/$/;"	m	struct:lt__handle	access:public
lt__header_get_instnam	../libltdl/loaders/dyld.c	/^lt__header_get_instnam (const mach_header *mh)$/;"	f	file:	signature:(const mach_header *mh)
lt__header_get_instnam	../libltdl/loaders/dyld.c	/^static const char *lt__header_get_instnam (const mach_header *mh);$/;"	p	file:	signature:(const mach_header *mh)
lt__image_symbol	../libltdl/loaders/dyld.c	/^static NSSymbol	(*lt__image_symbol)		(const mach_header *image,$/;"	v	file:
lt__image_symbol_p	../libltdl/loaders/dyld.c	/^static enum DYLD_BOOL (*lt__image_symbol_p)	(const mach_header *image,$/;"	v	typeref:enum:lt__image_symbol_p	file:
lt__interface_id	../libltdl/ltdl.c	/^} lt__interface_id;$/;"	t	typeref:struct:__anon1	file:
lt__linkedlib_symbol	../libltdl/loaders/dyld.c	/^lt__linkedlib_symbol (const char *symname, const mach_header *mh)$/;"	f	file:	signature:(const char *symname, const mach_header *mh)
lt__linkedlib_symbol	../libltdl/loaders/dyld.c	/^static NSSymbol lt__linkedlib_symbol (const char *symname, const mach_header *mh);$/;"	p	file:	signature:(const char *symname, const mach_header *mh)
lt__malloc	../libltdl/libltdl/lt__alloc.h	/^LT_SCOPE void *lt__malloc (size_t n);$/;"	p	signature:(size_t n)
lt__malloc	../libltdl/lt__alloc.c	/^lt__malloc (size_t n)$/;"	f	signature:(size_t n)
lt__match_loadedlib	../libltdl/loaders/dyld.c	/^lt__match_loadedlib (const char *name)$/;"	f	file:	signature:(const char *name)
lt__match_loadedlib	../libltdl/loaders/dyld.c	/^static const mach_header *lt__match_loadedlib (const char *name);$/;"	p	file:	signature:(const char *name)
lt__memdup	../libltdl/libltdl/lt__alloc.h	/^LT_SCOPE void *lt__memdup (void const *mem, size_t n);$/;"	p	signature:(void const *mem, size_t n)
lt__memdup	../libltdl/lt__alloc.c	/^lt__memdup (void const *mem, size_t n)$/;"	f	signature:(void const *mem, size_t n)
lt__module_export	../libltdl/loaders/dyld.c	/^static enum DYLD_BOOL (*lt__module_export)	(NSModule module) = 0;$/;"	v	typeref:enum:lt__module_export	file:
lt__nsmodule_get_header	../libltdl/loaders/dyld.c	/^lt__nsmodule_get_header (NSModule module)$/;"	f	file:	signature:(NSModule module)
lt__nsmodule_get_header	../libltdl/loaders/dyld.c	/^static const mach_header *lt__nsmodule_get_header (NSModule module);$/;"	p	file:	signature:(NSModule module)
lt__realloc	../libltdl/libltdl/lt__alloc.h	/^LT_SCOPE void *lt__realloc (void *mem, size_t n);$/;"	p	signature:(void *mem, size_t n)
lt__realloc	../libltdl/lt__alloc.c	/^lt__realloc (void *mem, size_t n)$/;"	f	signature:(void *mem, size_t n)
lt__set_last_error	../libltdl/libltdl/lt__private.h	/^LT_SCOPE const char *lt__set_last_error	(const char *errormsg);$/;"	p	signature:(const char *errormsg)
lt__set_last_error	../libltdl/lt_error.c	/^lt__set_last_error (const char *errormsg)$/;"	f	signature:(const char *errormsg)
lt__strdup	../libltdl/libltdl/lt__alloc.h	/^LT_SCOPE char *lt__strdup (const char *string);$/;"	p	signature:(const char *string)
lt__strdup	../libltdl/lt__alloc.c	/^lt__strdup (const char *string)$/;"	f	signature:(const char *string)
lt__zalloc	../libltdl/libltdl/lt__alloc.h	/^LT_SCOPE void *lt__zalloc (size_t n);$/;"	p	signature:(size_t n)
lt__zalloc	../libltdl/lt__alloc.c	/^lt__zalloc (size_t n)$/;"	f	signature:(size_t n)
lt_argz_insert	../libltdl/ltdl.c	/^lt_argz_insert (char **pargz, size_t *pargz_len, char *before,$/;"	f	file:	signature:(char **pargz, size_t *pargz_len, char *before, const char *entry)
lt_argz_insert	../libltdl/ltdl.c	/^static	int	lt_argz_insert	      (char **pargz, size_t *pargz_len,$/;"	p	file:	signature:(char **pargz, size_t *pargz_len, char *before, const char *entry)
lt_argz_insertdir	../libltdl/ltdl.c	/^lt_argz_insertdir (char **pargz, size_t *pargz_len, const char *dirnam,$/;"	f	file:	signature:(char **pargz, size_t *pargz_len, const char *dirnam, struct dirent *dp)
lt_argz_insertdir	../libltdl/ltdl.c	/^static	int	lt_argz_insertdir     (char **pargz, size_t *pargz_len,$/;"	p	file:	signature:(char **pargz, size_t *pargz_len, const char *dirnam, struct dirent *dp)
lt_argz_insertinorder	../libltdl/ltdl.c	/^lt_argz_insertinorder (char **pargz, size_t *pargz_len, const char *entry)$/;"	f	file:	signature:(char **pargz, size_t *pargz_len, const char *entry)
lt_argz_insertinorder	../libltdl/ltdl.c	/^static	int	lt_argz_insertinorder (char **pargz, size_t *pargz_len,$/;"	p	file:	signature:(char **pargz, size_t *pargz_len, const char *entry)
lt_dladderror	../libltdl/libltdl/lt_error.h	/^LT_SCOPE int	lt_dladderror	(const char *diagnostic);$/;"	p	signature:(const char *diagnostic)
lt_dladderror	../libltdl/lt_error.c	/^lt_dladderror (const char *diagnostic)$/;"	f	signature:(const char *diagnostic)
lt_dladdsearchdir	../libltdl/ltdl.c	/^lt_dladdsearchdir (const char *search_dir)$/;"	f	signature:(const char *search_dir)
lt_dladdsearchdir	../libltdl/ltdl.h	/^LT_SCOPE int	    lt_dladdsearchdir	 (const char *search_dir);$/;"	p	signature:(const char *search_dir)
lt_dladvise	../libltdl/libltdl/lt_dlloader.h	/^typedef struct lt__advise *	lt_dladvise;$/;"	t	typeref:struct:lt__advise
lt_dladvise_destroy	../libltdl/ltdl.c	/^lt_dladvise_destroy (lt_dladvise *padvise)$/;"	f	signature:(lt_dladvise *padvise)
lt_dladvise_destroy	../libltdl/ltdl.h	/^LT_SCOPE int	    lt_dladvise_destroy  (lt_dladvise *advise);$/;"	p	signature:(lt_dladvise *advise)
lt_dladvise_ext	../libltdl/ltdl.c	/^lt_dladvise_ext (lt_dladvise *padvise)$/;"	f	signature:(lt_dladvise *padvise)
lt_dladvise_ext	../libltdl/ltdl.h	/^LT_SCOPE int	    lt_dladvise_ext	 (lt_dladvise *advise);$/;"	p	signature:(lt_dladvise *advise)
lt_dladvise_global	../libltdl/ltdl.c	/^lt_dladvise_global (lt_dladvise *padvise)$/;"	f	signature:(lt_dladvise *padvise)
lt_dladvise_global	../libltdl/ltdl.h	/^LT_SCOPE int	    lt_dladvise_global   (lt_dladvise *advise);$/;"	p	signature:(lt_dladvise *advise)
lt_dladvise_init	../libltdl/ltdl.c	/^lt_dladvise_init (lt_dladvise *padvise)$/;"	f	signature:(lt_dladvise *padvise)
lt_dladvise_init	../libltdl/ltdl.h	/^LT_SCOPE int	    lt_dladvise_init	 (lt_dladvise *advise);$/;"	p	signature:(lt_dladvise *advise)
lt_dladvise_local	../libltdl/ltdl.c	/^lt_dladvise_local (lt_dladvise *padvise)$/;"	f	signature:(lt_dladvise *padvise)
lt_dladvise_local	../libltdl/ltdl.h	/^LT_SCOPE int	    lt_dladvise_local	 (lt_dladvise *advise);$/;"	p	signature:(lt_dladvise *advise)
lt_dladvise_preload	../libltdl/ltdl.c	/^lt_dladvise_preload (lt_dladvise *padvise)$/;"	f	signature:(lt_dladvise *padvise)
lt_dladvise_preload	../libltdl/ltdl.h	/^LT_SCOPE int	    lt_dladvise_preload	 (lt_dladvise *advise);$/;"	p	signature:(lt_dladvise *advise)
lt_dladvise_resident	../libltdl/ltdl.c	/^lt_dladvise_resident (lt_dladvise *padvise)$/;"	f	signature:(lt_dladvise *padvise)
lt_dladvise_resident	../libltdl/ltdl.h	/^LT_SCOPE int	    lt_dladvise_resident (lt_dladvise *advise);$/;"	p	signature:(lt_dladvise *advise)
lt_dlcaller_get_data	../libltdl/ltdl.c	/^lt_dlcaller_get_data (lt_dlinterface_id key, lt_dlhandle handle)$/;"	f	signature:(lt_dlinterface_id key, lt_dlhandle handle)
lt_dlcaller_get_data	../libltdl/ltdl.h	/^LT_SCOPE void *	lt_dlcaller_get_data  (lt_dlinterface_id key,$/;"	p	signature:(lt_dlinterface_id key, lt_dlhandle handle)
lt_dlcaller_set_data	../libltdl/ltdl.c	/^lt_dlcaller_set_data (lt_dlinterface_id key, lt_dlhandle handle, void *data)$/;"	f	signature:(lt_dlinterface_id key, lt_dlhandle handle, void *data)
lt_dlcaller_set_data	../libltdl/ltdl.h	/^LT_SCOPE void *	lt_dlcaller_set_data  (lt_dlinterface_id key,$/;"	p	signature:(lt_dlinterface_id key, lt_dlhandle handle, void *data)
lt_dlclose	../libltdl/ltdl.c	/^lt_dlclose (lt_dlhandle handle)$/;"	f	signature:(lt_dlhandle handle)
lt_dlclose	../libltdl/ltdl.h	/^LT_SCOPE int	    lt_dlclose		(lt_dlhandle handle);$/;"	p	signature:(lt_dlhandle handle)
lt_dlerror	../libltdl/ltdl.c	/^lt_dlerror (void)$/;"	f	signature:(void)
lt_dlerror	../libltdl/ltdl.h	/^LT_SCOPE const char *lt_dlerror		(void);$/;"	p	signature:(void)
lt_dlerror_table	../libltdl/libltdl/lt_error.h	/^	lt_dlerror_table$/;"	e	enum:__anon4
lt_dlerror_table	../libltdl/libltdl/lt_error.h	44;"	d
lt_dlexit	../libltdl/ltdl.c	/^lt_dlexit (void)$/;"	f	signature:(void)
lt_dlexit	../libltdl/ltdl.h	/^LT_SCOPE int	    lt_dlexit		(void);$/;"	p	signature:(void)
lt_dlforeachfile	../libltdl/ltdl.c	/^lt_dlforeachfile (const char *search_path,$/;"	f	signature:(const char *search_path, int (*func) (const char *filename, void *data), void *data)
lt_dlforeachfile	../libltdl/ltdl.h	/^LT_SCOPE int	    lt_dlforeachfile	 ($/;"	p	signature:( const char *search_path, int (*func) (const char *filename, void *data), void *data)
lt_dlgetinfo	../libltdl/ltdl.c	/^lt_dlgetinfo (lt_dlhandle handle)$/;"	f	signature:(lt_dlhandle handle)
lt_dlgetinfo	../libltdl/ltdl.h	/^LT_SCOPE const lt_dlinfo *lt_dlgetinfo	    (lt_dlhandle handle);$/;"	p	signature:(lt_dlhandle handle)
lt_dlgetsearchpath	../libltdl/ltdl.c	/^lt_dlgetsearchpath (void)$/;"	f	signature:(void)
lt_dlgetsearchpath	../libltdl/ltdl.h	/^LT_SCOPE const char *lt_dlgetsearchpath	 (void);$/;"	p	signature:(void)
lt_dlhandle	../libltdl/ltdl.h	/^typedef	struct lt__handle *lt_dlhandle;	\/* A loaded module.  *\/$/;"	t	typeref:struct:lt__handle
lt_dlhandle_fetch	../libltdl/ltdl.c	/^lt_dlhandle_fetch (lt_dlinterface_id iface, const char *module_name)$/;"	f	signature:(lt_dlinterface_id iface, const char *module_name)
lt_dlhandle_fetch	../libltdl/ltdl.h	/^LT_SCOPE lt_dlhandle	lt_dlhandle_fetch   (lt_dlinterface_id iface,$/;"	p	signature:(lt_dlinterface_id iface, const char *module_name)
lt_dlhandle_interface	../libltdl/ltdl.h	/^typedef int lt_dlhandle_interface (lt_dlhandle handle, const char *id_string);$/;"	t
lt_dlhandle_iterate	../libltdl/ltdl.c	/^lt_dlhandle_iterate (lt_dlinterface_id iface, lt_dlhandle place)$/;"	f	signature:(lt_dlinterface_id iface, lt_dlhandle place)
lt_dlhandle_iterate	../libltdl/ltdl.h	/^LT_SCOPE lt_dlhandle	lt_dlhandle_iterate (lt_dlinterface_id iface,$/;"	p	signature:(lt_dlinterface_id iface, lt_dlhandle place)
lt_dlhandle_map	../libltdl/ltdl.c	/^lt_dlhandle_map (lt_dlinterface_id iface,$/;"	f	signature:(lt_dlinterface_id iface, int (*func) (lt_dlhandle handle, void *data), void *data)
lt_dlhandle_map	../libltdl/ltdl.h	/^LT_SCOPE int		lt_dlhandle_map	    (lt_dlinterface_id iface,$/;"	p	signature:(lt_dlinterface_id iface, int (*func) (lt_dlhandle handle, void *data), void *data)
lt_dlinfo	../libltdl/ltdl.h	/^} lt_dlinfo;$/;"	t	typeref:struct:__anon8
lt_dlinit	../libltdl/ltdl.c	/^lt_dlinit (void)$/;"	f	signature:(void)
lt_dlinit	../libltdl/ltdl.h	/^LT_SCOPE int	    lt_dlinit		(void);$/;"	p	signature:(void)
lt_dlinsertsearchdir	../libltdl/ltdl.c	/^lt_dlinsertsearchdir (const char *before, const char *search_dir)$/;"	f	signature:(const char *before, const char *search_dir)
lt_dlinsertsearchdir	../libltdl/ltdl.h	/^LT_SCOPE int	    lt_dlinsertsearchdir (const char *before,$/;"	p	signature:(const char *before, const char *search_dir)
lt_dlinterface_free	../libltdl/ltdl.c	/^void lt_dlinterface_free (lt_dlinterface_id key)$/;"	f	signature:(lt_dlinterface_id key)
lt_dlinterface_free	../libltdl/ltdl.h	/^LT_SCOPE void	lt_dlinterface_free (lt_dlinterface_id key);$/;"	p	signature:(lt_dlinterface_id key)
lt_dlinterface_id	../libltdl/ltdl.h	/^typedef void * lt_dlinterface_id;$/;"	t
lt_dlinterface_register	../libltdl/ltdl.c	/^lt_dlinterface_register (const char *id_string, lt_dlhandle_interface *iface)$/;"	f	signature:(const char *id_string, lt_dlhandle_interface *iface)
lt_dlinterface_register	../libltdl/ltdl.h	/^LT_SCOPE lt_dlinterface_id lt_dlinterface_register (const char *id_string,$/;"	p	signature:(const char *id_string, lt_dlhandle_interface *iface)
lt_dlisresident	../libltdl/ltdl.c	/^lt_dlisresident	(lt_dlhandle handle)$/;"	f	signature:(lt_dlhandle handle)
lt_dlisresident	../libltdl/ltdl.h	/^LT_SCOPE int	    lt_dlisresident	(lt_dlhandle handle);$/;"	p	signature:(lt_dlhandle handle)
lt_dlloader	../libltdl/libltdl/lt_dlloader.h	/^typedef	void *	lt_dlloader;$/;"	t
lt_dlloader_add	../libltdl/libltdl/lt_dlloader.h	/^LT_SCOPE int		lt_dlloader_add	   (const lt_dlvtable *vtable);$/;"	p	signature:(const lt_dlvtable *vtable)
lt_dlloader_add	../libltdl/lt_dlloader.c	/^lt_dlloader_add (const lt_dlvtable *vtable)$/;"	f	signature:(const lt_dlvtable *vtable)
lt_dlloader_dump	../libltdl/libltdl/lt_dlloader.h	/^LT_SCOPE void		lt_dlloader_dump	(void);$/;"	p	signature:(void)
lt_dlloader_dump	../libltdl/lt_dlloader.c	/^lt_dlloader_dump (void)$/;"	f	signature:(void)
lt_dlloader_exit	../libltdl/libltdl/lt_dlloader.h	/^typedef int	    lt_dlloader_exit	(lt_user_data data);$/;"	t
lt_dlloader_find	../libltdl/libltdl/lt_dlloader.h	/^LT_SCOPE const lt_dlvtable *lt_dlloader_find	(const char *name);$/;"	p	signature:(const char *name)
lt_dlloader_find	../libltdl/lt_dlloader.c	/^lt_dlloader_find (const char *name)$/;"	f	signature:(const char *name)
lt_dlloader_get	../libltdl/libltdl/lt_dlloader.h	/^LT_SCOPE const lt_dlvtable *lt_dlloader_get	(lt_dlloader loader);$/;"	p	signature:(lt_dlloader loader)
lt_dlloader_get	../libltdl/lt_dlloader.c	/^lt_dlloader_get	(lt_dlloader loader)$/;"	f	signature:(lt_dlloader loader)
lt_dlloader_init	../libltdl/libltdl/lt_dlloader.h	/^typedef int	    lt_dlloader_init	(lt_user_data data);$/;"	t
lt_dlloader_next	../libltdl/libltdl/lt_dlloader.h	/^LT_SCOPE lt_dlloader	lt_dlloader_next   (const lt_dlloader loader);$/;"	p	signature:(const lt_dlloader loader)
lt_dlloader_next	../libltdl/lt_dlloader.c	/^lt_dlloader_next (lt_dlloader loader)$/;"	f	signature:(lt_dlloader loader)
lt_dlloader_priority	../libltdl/libltdl/lt_dlloader.h	/^} lt_dlloader_priority;$/;"	t	typeref:enum:__anon5
lt_dlloader_remove	../libltdl/libltdl/lt_dlloader.h	/^LT_SCOPE lt_dlvtable *	lt_dlloader_remove	(const char *name);$/;"	p	signature:(const char *name)
lt_dlloader_remove	../libltdl/lt_dlloader.c	/^lt_dlloader_remove (const char *name)$/;"	f	signature:(const char *name)
lt_dlmakeresident	../libltdl/ltdl.c	/^lt_dlmakeresident (lt_dlhandle handle)$/;"	f	signature:(lt_dlhandle handle)
lt_dlmakeresident	../libltdl/ltdl.h	/^LT_SCOPE int	    lt_dlmakeresident	(lt_dlhandle handle);$/;"	p	signature:(lt_dlhandle handle)
lt_dlopen	../libltdl/ltdl.c	/^lt_dlopen (const char *filename)$/;"	f	signature:(const char *filename)
lt_dlopen	../libltdl/ltdl.h	/^LT_SCOPE lt_dlhandle lt_dlopen		(const char *filename);$/;"	p	signature:(const char *filename)
lt_dlopenadvise	../libltdl/ltdl.c	/^lt_dlopenadvise (const char *filename, lt_dladvise advise)$/;"	f	signature:(const char *filename, lt_dladvise advise)
lt_dlopenadvise	../libltdl/ltdl.h	/^LT_SCOPE lt_dlhandle lt_dlopenadvise	(const char *filename,$/;"	p	signature:(const char *filename, lt_dladvise advise)
lt_dlopenext	../libltdl/ltdl.c	/^lt_dlopenext (const char *filename)$/;"	f	signature:(const char *filename)
lt_dlopenext	../libltdl/ltdl.h	/^LT_SCOPE lt_dlhandle lt_dlopenext	(const char *filename);$/;"	p	signature:(const char *filename)
lt_dlpath_insertdir	../libltdl/ltdl.c	/^lt_dlpath_insertdir (char **ppath, char *before, const char *dir)$/;"	f	file:	signature:(char **ppath, char *before, const char *dir)
lt_dlpath_insertdir	../libltdl/ltdl.c	/^static	int	lt_dlpath_insertdir   (char **ppath, char *before,$/;"	p	file:	signature:(char **ppath, char *before, const char *dir)
lt_dlpreload	../libltdl/loaders/preopen.c	/^lt_dlpreload (const lt_dlsymlist *preloaded)$/;"	f	signature:(const lt_dlsymlist *preloaded)
lt_dlpreload	../libltdl/ltdl.h	/^LT_SCOPE int	lt_dlpreload	     (const lt_dlsymlist *preloaded);$/;"	p	signature:(const lt_dlsymlist *preloaded)
lt_dlpreload_callback_func	../libltdl/ltdl.h	/^typedef int lt_dlpreload_callback_func (lt_dlhandle handle);$/;"	t
lt_dlpreload_default	../libltdl/loaders/preopen.c	/^lt_dlpreload_default (const lt_dlsymlist *preloaded)$/;"	f	signature:(const lt_dlsymlist *preloaded)
lt_dlpreload_default	../libltdl/ltdl.h	/^LT_SCOPE int	lt_dlpreload_default (const lt_dlsymlist *preloaded);$/;"	p	signature:(const lt_dlsymlist *preloaded)
lt_dlpreload_open	../libltdl/loaders/preopen.c	/^lt_dlpreload_open (const char *originator, lt_dlpreload_callback_func *func)$/;"	f	signature:(const char *originator, lt_dlpreload_callback_func *func)
lt_dlpreload_open	../libltdl/ltdl.h	/^LT_SCOPE int	lt_dlpreload_open    (const char *originator,$/;"	p	signature:(const char *originator, lt_dlpreload_callback_func *func)
lt_dlseterror	../libltdl/libltdl/lt_error.h	/^LT_SCOPE int	lt_dlseterror	(int errorcode);$/;"	p	signature:(int errorcode)
lt_dlseterror	../libltdl/lt_error.c	/^lt_dlseterror (int errindex)$/;"	f	signature:(int errindex)
lt_dlsetsearchpath	../libltdl/ltdl.c	/^lt_dlsetsearchpath (const char *search_path)$/;"	f	signature:(const char *search_path)
lt_dlsetsearchpath	../libltdl/ltdl.h	/^LT_SCOPE int 	    lt_dlsetsearchpath	 (const char *search_path);$/;"	p	signature:(const char *search_path)
lt_dlsym	../libltdl/ltdl.c	/^lt_dlsym (lt_dlhandle place, const char *symbol)$/;"	f	signature:(lt_dlhandle place, const char *symbol)
lt_dlsym	../libltdl/ltdl.h	/^LT_SCOPE void *	    lt_dlsym		(lt_dlhandle handle, const char *name);$/;"	p	signature:(lt_dlhandle handle, const char *name)
lt_dlsymlist	../libltdl/ltdl.h	/^} lt_dlsymlist;$/;"	t	typeref:struct:__anon7
lt_dlvtable	../libltdl/libltdl/lt_dlloader.h	/^} lt_dlvtable;$/;"	t	typeref:struct:__anon6
lt_find_sym	../libltdl/libltdl/lt_dlloader.h	/^typedef void *	    lt_find_sym		(lt_user_data data, lt_module module,$/;"	t
lt_get_vtable	../libltdl/libltdl/lt_dlloader.h	/^typedef  const lt_dlvtable *lt_get_vtable	(lt_user_data data);$/;"	t
lt_interface_data	../libltdl/libltdl/lt__private.h	/^} lt_interface_data;$/;"	t	typeref:struct:__anon2
lt_module	../libltdl/libltdl/lt_dlloader.h	/^typedef void *	lt_module;$/;"	t
lt_module_close	../libltdl/libltdl/lt_dlloader.h	/^typedef int	    lt_module_close	(lt_user_data data,$/;"	t
lt_module_open	../libltdl/libltdl/lt_dlloader.h	/^typedef lt_module   lt_module_open	(lt_user_data data,$/;"	t
lt_preloaded_symbols	../libltdl/ltdl.h	104;"	d
lt_ptr	../libltdl/ltdl.h	159;"	d
lt_strlcat	../libltdl/libltdl/lt__strl.h	/^LT_SCOPE size_t lt_strlcat(char *dst, const char *src, const size_t dstsize);$/;"	p	signature:(char *dst, const char *src, const size_t dstsize)
lt_strlcat	../libltdl/lt__strl.c	/^lt_strlcat(char *dst, const char *src, const size_t dstsize)$/;"	f	signature:(char *dst, const char *src, const size_t dstsize)
lt_strlcpy	../libltdl/libltdl/lt__strl.h	/^LT_SCOPE size_t lt_strlcpy(char *dst, const char *src, const size_t dstsize);$/;"	p	signature:(char *dst, const char *src, const size_t dstsize)
lt_strlcpy	../libltdl/lt__strl.c	/^lt_strlcpy(char *dst, const char *src, const size_t dstsize)$/;"	f	signature:(char *dst, const char *src, const size_t dstsize)
lt_user_data	../libltdl/libltdl/lt_dlloader.h	/^typedef void *	lt_user_data;$/;"	t
mach_header	../libltdl/loaders/dyld.c	/^typedef struct mach_header mach_header;$/;"	t	typeref:struct:mach_header	file:
main	../libltdl/config/config.guess	/^		main()$/;"	f
main	../libltdl/config/config.guess	/^	main ()$/;"	f
make_dummy_depfile	../libltdl/config/depcomp	/^make_dummy_depfile ()$/;"	f
max_modulation_	../modulatory_connection.h	/^            nest::long_t max_modulation_;$/;"	m	class:mynest::ModulatoryCommonProperties	access:public
mem	../libltdl/lt__alloc.c	/^  void *mem;$/;"	l
merged	../libltdl/slist.c	/^  SList merged, *insert;$/;"	l
mh	../libltdl/loaders/dyld.c	/^      const mach_header *mh = (const mach_header *) module;$/;"	l
mh	../libltdl/loaders/dyld.c	/^  const mach_header *mh	= 0;$/;"	l
mh	../libltdl/loaders/dyld.c	/^  const mach_header *mh = (const mach_header *) module;$/;"	l
mh	../libltdl/loaders/dyld.c	/^  const mach_header *mh = 0;$/;"	l
mh1	../libltdl/loaders/dyld.c	/^	      const mach_header *mh1 = lt__match_loadedlib (name);$/;"	l
modmodule_LTX_mod	../modmodule.cpp	/^mynest::ModModule modmodule_LTX_mod;$/;"	v
modname	../libltdl/loaders/dyld.c	/^  const char *modname = NSNameOfModule (module);$/;"	l
modulation	../modulatory_connection.h	/^            nest::double_t modulation =  2*num_spikes\/(di*cp.max_modulation_);$/;"	l
module	../libltdl/libltdl/lt__private.h	/^  lt_module		module;		\/* system module handle *\/$/;"	m	struct:lt__handle	access:public
module	../libltdl/loaders/dld_link.c	/^  lt_module module = lt__strdup (filename);$/;"	l
module	../libltdl/loaders/dlopen.c	/^  lt_module	module;$/;"	l
module	../libltdl/loaders/dyld.c	/^  lt_module module = 0;$/;"	l
module	../libltdl/loaders/loadlibrary.c	/^  lt_module	module	   = 0;$/;"	l
module	../libltdl/loaders/preopen.c	/^  lt_module	 module = 0;$/;"	l
module	../libltdl/loaders/shl_load.c	/^  lt_module module = shl_load (filename, LT_BIND_FLAGS, 0L);$/;"	l
module_close	../libltdl/libltdl/lt_dlloader.h	/^  lt_module_close *	module_close;$/;"	m	struct:__anon6	access:public
module_flags	../libltdl/loaders/dlopen.c	/^  int		module_flags = LT_LAZY_OR_NOW;$/;"	l
module_open	../libltdl/libltdl/lt_dlloader.h	/^  lt_module_open *	module_open;$/;"	m	struct:__anon6	access:public
mynest	../da_connection.h	/^namespace mynest$/;"	n
mynest	../modmodule.h	/^namespace mynest$/;"	n
mynest	../modulatory_connection.cpp	/^namespace mynest$/;"	n	file:
mynest	../modulatory_connection.h	/^namespace mynest$/;"	n
mynest::ConnectionBase::get_status	../da_connection.h	/^            ConnectionBase::get_status( d );$/;"	p	class:mynest::ConnectionBase	signature:( d )
mynest::ConnectionBase::get_status	../modulatory_connection.h	/^            ConnectionBase::get_status( d );$/;"	p	class:mynest::ConnectionBase	signature:( d )
mynest::ConnectionBase::set_status	../da_connection.h	/^            ConnectionBase::set_status( d, cm );$/;"	p	class:mynest::ConnectionBase	signature:( d, cm )
mynest::ConnectionBase::set_status	../modulatory_connection.h	/^            ConnectionBase::set_status( d, cm );$/;"	p	class:mynest::ConnectionBase	signature:( d, cm )
mynest::D1Connection	../da_connection.h	/^        class D1Connection : public ModulatoryConnection< targetidentifierT >$/;"	c	namespace:mynest	inherits:ModulatoryConnection
mynest::D1Connection::ConnectionBase	../da_connection.h	/^            typedef ModulatoryConnection< targetidentifierT > ConnectionBase;$/;"	t	class:mynest::D1Connection	access:public
mynest::D1Connection::D1Connection	../da_connection.h	/^            D1Connection() $/;"	f	class:mynest::D1Connection	access:public	signature:()
mynest::D1Connection::alpha	../da_connection.h	/^            nest::double_t alpha;$/;"	m	class:mynest::D1Connection	access:private
mynest::D1Connection::compute_modulation	../da_connection.h	/^            virtual nest::double_t compute_modulation(nest::double_t modulation)$/;"	f	class:mynest::D1Connection	access:public	implementation:virtual	signature:(nest::double_t modulation)
mynest::D1Connection::get_status	../da_connection.h	/^            void get_status( DictionaryDatum& d ) const;$/;"	p	class:mynest::D1Connection	access:public	signature:( DictionaryDatum& d ) const
mynest::D1Connection::get_status	../da_connection.h	/^        void D1Connection< targetidentifierT >::get_status( DictionaryDatum& d ) const$/;"	f	class:mynest::D1Connection	signature:( DictionaryDatum& d ) const
mynest::D1Connection::set_alpha	../da_connection.h	/^            void  set_alpha( nest::double_t alpha_ )$/;"	f	class:mynest::D1Connection	access:public	signature:( nest::double_t alpha_ )
mynest::D1Connection::set_status	../da_connection.h	/^            void set_status( const DictionaryDatum& d, nest::ConnectorModel& cm );$/;"	p	class:mynest::D1Connection	access:public	signature:( const DictionaryDatum& d, nest::ConnectorModel& cm )
mynest::D1Connection::set_status	../da_connection.h	/^        void D1Connection< targetidentifierT >::set_status( const DictionaryDatum& d,$/;"	f	class:mynest::D1Connection	signature:( const DictionaryDatum& d, nest::ConnectorModel& cm )
mynest::D2Connection	../da_connection.h	/^        class D2Connection : public ModulatoryConnection< targetidentifierT >$/;"	c	namespace:mynest	inherits:ModulatoryConnection
mynest::D2Connection::ConnectionBase	../da_connection.h	/^            typedef ModulatoryConnection< targetidentifierT > ConnectionBase;$/;"	t	class:mynest::D2Connection	access:public
mynest::D2Connection::D2Connection	../da_connection.h	/^            D2Connection() $/;"	f	class:mynest::D2Connection	access:public	signature:()
mynest::D2Connection::alpha	../da_connection.h	/^            nest::double_t alpha;$/;"	m	class:mynest::D2Connection	access:private
mynest::D2Connection::compute_modulation	../da_connection.h	/^            virtual nest::double_t compute_modulation(nest::double_t modulation)$/;"	f	class:mynest::D2Connection	access:public	implementation:virtual	signature:(nest::double_t modulation)
mynest::D2Connection::get_status	../da_connection.h	/^            void get_status( DictionaryDatum& d ) const;$/;"	p	class:mynest::D2Connection	access:public	signature:( DictionaryDatum& d ) const
mynest::D2Connection::get_status	../da_connection.h	/^        void D2Connection< targetidentifierT >::get_status( DictionaryDatum& d ) const$/;"	f	class:mynest::D2Connection	signature:( DictionaryDatum& d ) const
mynest::D2Connection::set_alpha	../da_connection.h	/^            void  set_alpha( nest::double_t alpha_ )$/;"	f	class:mynest::D2Connection	access:public	signature:( nest::double_t alpha_ )
mynest::D2Connection::set_status	../da_connection.h	/^            void set_status( const DictionaryDatum& d, nest::ConnectorModel& cm );$/;"	p	class:mynest::D2Connection	access:public	signature:( const DictionaryDatum& d, nest::ConnectorModel& cm )
mynest::D2Connection::set_status	../da_connection.h	/^        void D2Connection< targetidentifierT >::set_status( const DictionaryDatum& d,$/;"	f	class:mynest::D2Connection	signature:( const DictionaryDatum& d, nest::ConnectorModel& cm )
mynest::ModModule	../modmodule.h	/^class ModModule : public SLIModule$/;"	c	namespace:mynest	inherits:SLIModule
mynest::ModModule::ModModule	../modmodule.cpp	/^mynest::ModModule::ModModule()$/;"	f	class:mynest::ModModule	signature:()
mynest::ModModule::ModModule	../modmodule.h	/^  ModModule();$/;"	p	class:mynest::ModModule	access:public	signature:()
mynest::ModModule::commandstring	../modmodule.cpp	/^mynest::ModModule::commandstring( void ) const$/;"	f	class:mynest::ModModule	signature:( void ) const
mynest::ModModule::commandstring	../modmodule.h	/^  const std::string commandstring( void ) const;$/;"	p	class:mynest::ModModule	access:public	signature:( void ) const
mynest::ModModule::init	../modmodule.cpp	/^mynest::ModModule::init( SLIInterpreter* i )$/;"	f	class:mynest::ModModule	signature:( SLIInterpreter* i )
mynest::ModModule::init	../modmodule.h	/^  void init( SLIInterpreter* );$/;"	p	class:mynest::ModModule	access:public	signature:( SLIInterpreter* )
mynest::ModModule::name	../modmodule.cpp	/^mynest::ModModule::name( void ) const$/;"	f	class:mynest::ModModule	signature:( void ) const
mynest::ModModule::name	../modmodule.h	/^  const std::string name( void ) const;$/;"	p	class:mynest::ModModule	access:public	signature:( void ) const
mynest::ModModule::~ModModule	../modmodule.cpp	/^mynest::ModModule::~ModModule()$/;"	f	class:mynest::ModModule	signature:()
mynest::ModModule::~ModModule	../modmodule.h	/^  ~ModModule();$/;"	p	class:mynest::ModModule	access:public	signature:()
mynest::ModulatoryCommonProperties	../modulatory_connection.h	/^    class ModulatoryCommonProperties : public nest::CommonSynapseProperties$/;"	c	namespace:mynest	inherits:nest::CommonSynapseProperties
mynest::ModulatoryCommonProperties::ModulatoryCommonProperties	../modulatory_connection.cpp	/^    ModulatoryCommonProperties::ModulatoryCommonProperties()$/;"	f	class:mynest::ModulatoryCommonProperties	signature:()
mynest::ModulatoryCommonProperties::ModulatoryCommonProperties	../modulatory_connection.h	/^            ModulatoryCommonProperties();$/;"	p	class:mynest::ModulatoryCommonProperties	access:public	signature:()
mynest::ModulatoryCommonProperties::get_node	../modulatory_connection.cpp	/^    nest::Node* ModulatoryCommonProperties::get_node()$/;"	f	class:mynest::ModulatoryCommonProperties	signature:()
mynest::ModulatoryCommonProperties::get_node	../modulatory_connection.h	/^            nest::Node* get_node();$/;"	p	class:mynest::ModulatoryCommonProperties	access:public	signature:()
mynest::ModulatoryCommonProperties::get_status	../modulatory_connection.cpp	/^    void ModulatoryCommonProperties::get_status( DictionaryDatum& d ) const$/;"	f	class:mynest::ModulatoryCommonProperties	signature:( DictionaryDatum& d ) const
mynest::ModulatoryCommonProperties::get_status	../modulatory_connection.h	/^            void get_status( DictionaryDatum& d ) const;$/;"	p	class:mynest::ModulatoryCommonProperties	access:public	signature:( DictionaryDatum& d ) const
mynest::ModulatoryCommonProperties::get_vt_gid	../modulatory_connection.h	/^            nest::long_t get_vt_gid() const;$/;"	p	class:mynest::ModulatoryCommonProperties	access:public	signature:() const
mynest::ModulatoryCommonProperties::get_vt_gid	../modulatory_connection.h	/^    inline nest::long_t ModulatoryCommonProperties::get_vt_gid() const$/;"	f	class:mynest::ModulatoryCommonProperties	signature:() const
mynest::ModulatoryCommonProperties::max_modulation_	../modulatory_connection.h	/^            nest::long_t max_modulation_;$/;"	m	class:mynest::ModulatoryCommonProperties	access:public
mynest::ModulatoryCommonProperties::set_status	../modulatory_connection.cpp	/^    void ModulatoryCommonProperties::set_status( const DictionaryDatum& d, $/;"	f	class:mynest::ModulatoryCommonProperties	signature:( const DictionaryDatum& d, nest::ConnectorModel& cm )
mynest::ModulatoryCommonProperties::set_status	../modulatory_connection.h	/^            void set_status( const DictionaryDatum& d, nest::ConnectorModel& cm );$/;"	p	class:mynest::ModulatoryCommonProperties	access:public	signature:( const DictionaryDatum& d, nest::ConnectorModel& cm )
mynest::ModulatoryCommonProperties::vt_	../modulatory_connection.h	/^            nest::volume_transmitter* vt_;$/;"	m	class:mynest::ModulatoryCommonProperties	access:public
mynest::ModulatoryConnection	../modulatory_connection.h	/^        class ModulatoryConnection : public nest::Connection< targetidentifierT >$/;"	c	namespace:mynest	inherits:nest::Connection
mynest::ModulatoryConnection::CommonPropertiesType	../modulatory_connection.h	/^            typedef ModulatoryCommonProperties CommonPropertiesType;$/;"	t	class:mynest::ModulatoryConnection	access:public
mynest::ModulatoryConnection::ConnTestDummyNode	../modulatory_connection.h	/^            class ConnTestDummyNode $/;"	c	class:mynest::ModulatoryConnection	inherits:nest::ConnTestDummyNodeBase	access:public
mynest::ModulatoryConnection::ConnTestDummyNode::handles_test_event	../modulatory_connection.h	/^                    nest::port handles_test_event( nest::DSSpikeEvent&, nest::rport )$/;"	f	class:mynest::ModulatoryConnection::ConnTestDummyNode	access:public	signature:( nest::DSSpikeEvent&, nest::rport )
mynest::ModulatoryConnection::ConnTestDummyNode::handles_test_event	../modulatory_connection.h	/^                    nest::port handles_test_event( nest::SpikeEvent&, nest::rport )$/;"	f	class:mynest::ModulatoryConnection::ConnTestDummyNode	access:public	signature:( nest::SpikeEvent&, nest::rport )
mynest::ModulatoryConnection::ConnectionBase	../modulatory_connection.h	/^            typedef nest::Connection< targetidentifierT > ConnectionBase;$/;"	t	class:mynest::ModulatoryConnection	access:public
mynest::ModulatoryConnection::ConnectionBase::check_connection_	../modulatory_connection.h	/^                ConnectionBase::check_connection_( dummy_target, s, t, receptor_type );$/;"	p	class:mynest::ModulatoryConnection::ConnectionBase	signature:( dummy_target, s, t, receptor_type )
mynest::ModulatoryConnection::ModulatoryConnection	../modulatory_connection.h	/^            ModulatoryConnection() $/;"	f	class:mynest::ModulatoryConnection	access:public	signature:()
mynest::ModulatoryConnection::check_connection	../modulatory_connection.h	/^            void check_connection( nest::Node& s,$/;"	f	class:mynest::ModulatoryConnection	access:public	signature:( nest::Node& s, nest::Node& t, nest::rport receptor_type, nest::double_t, const CommonPropertiesType& )
mynest::ModulatoryConnection::compute_modulation	../modulatory_connection.h	/^            virtual nest::double_t compute_modulation(nest::double_t modulation)$/;"	f	class:mynest::ModulatoryConnection	access:public	implementation:virtual	signature:(nest::double_t modulation)
mynest::ModulatoryConnection::dummy_target	../modulatory_connection.h	/^                ConnTestDummyNode dummy_target;$/;"	l
mynest::ModulatoryConnection::get_status	../modulatory_connection.h	/^            void get_status( DictionaryDatum& d ) const;$/;"	p	class:mynest::ModulatoryConnection	access:public	signature:( DictionaryDatum& d ) const
mynest::ModulatoryConnection::get_status	../modulatory_connection.h	/^        void ModulatoryConnection< targetidentifierT >::get_status( DictionaryDatum& d ) const$/;"	f	class:mynest::ModulatoryConnection	signature:( DictionaryDatum& d ) const
mynest::ModulatoryConnection::initial_weight_	../modulatory_connection.h	/^            nest::double_t initial_weight_; \/\/!< Initial synaptic weight$/;"	m	class:mynest::ModulatoryConnection	access:private
mynest::ModulatoryConnection::send	../modulatory_connection.h	/^            void send( nest::Event& e,$/;"	p	class:mynest::ModulatoryConnection	access:public	signature:( nest::Event& e, nest::thread t, nest::double_t t_lastspike, const CommonPropertiesType& cp )
mynest::ModulatoryConnection::send	../modulatory_connection.h	/^        inline void ModulatoryConnection< targetidentifierT >::send( nest::Event& e,$/;"	f	class:mynest::ModulatoryConnection	signature:( nest::Event& e, nest::thread t, nest::double_t last, const CommonPropertiesType& props )
mynest::ModulatoryConnection::set_status	../modulatory_connection.h	/^            void set_status( const DictionaryDatum& d, nest::ConnectorModel& cm );$/;"	p	class:mynest::ModulatoryConnection	access:public	signature:( const DictionaryDatum& d, nest::ConnectorModel& cm )
mynest::ModulatoryConnection::set_status	../modulatory_connection.h	/^        void ModulatoryConnection< targetidentifierT >::set_status( const DictionaryDatum& d,$/;"	f	class:mynest::ModulatoryConnection	signature:( const DictionaryDatum& d, nest::ConnectorModel& cm )
mynest::ModulatoryConnection::set_weight	../modulatory_connection.h	/^            void  set_weight( nest::double_t w )$/;"	f	class:mynest::ModulatoryConnection	access:public	signature:( nest::double_t w )
mynest::ModulatoryConnection::trigger_update_weight	../modulatory_connection.h	/^            void trigger_update_weight( nest::thread t,$/;"	p	class:mynest::ModulatoryConnection	access:public	signature:( nest::thread t, const std::vector< nest::spikecounter >& modulatory_spikes, double_t t_trig, const CommonPropertiesType& cp )
mynest::ModulatoryConnection::trigger_update_weight	../modulatory_connection.h	/^        inline void ModulatoryConnection< targetidentifierT >::trigger_update_weight( $/;"	f	class:mynest::ModulatoryConnection	signature:( nest::thread t, const std::vector< nest::spikecounter >& modulatory_spikes, const nest::double_t t_trig, const CommonPropertiesType& cp )
mynest::ModulatoryConnection::weight_	../modulatory_connection.h	/^            nest::double_t weight_; \/\/!< Synaptic weight$/;"	m	class:mynest::ModulatoryConnection	access:private
mynest::ModulatoryConnection::~ModulatoryConnection	../modulatory_connection.h	/^            virtual ~ModulatoryConnection()$/;"	f	class:mynest::ModulatoryConnection	access:public	implementation:virtual	signature:()
mynest::d	../modulatory_connection.h	/^            DictionaryDatum d( new Dictionary );$/;"	p	signature:( new Dictionary )
mynest::di	../modulatory_connection.h	/^            nest::long_t di = ( *d )[ "deliver_interval" ];$/;"	l
mynest::get_delay_steps	../modulatory_connection.h	/^            e.set_delay( ConnectionBase::get_delay_steps() );$/;"	p	signature:()
mynest::get_rport	../modulatory_connection.h	/^            e.set_rport( ConnectionBase::get_rport() );$/;"	p	signature:()
mynest::get_status	../modulatory_connection.h	/^            cp.vt_->get_status(d);$/;"	p	signature:(d)
mynest::get_target	../modulatory_connection.h	/^            e.set_receiver( *ConnectionBase::get_target( t ) );$/;"	p	signature:(t )
mynest::modulation	../modulatory_connection.h	/^            nest::double_t modulation =  2*num_spikes\/(di*cp.max_modulation_);$/;"	l
mynest::nest::CommonSynapseProperties::get_status	../modulatory_connection.cpp	/^        nest::CommonSynapseProperties::get_status( d );$/;"	p	class:mynest::nest::CommonSynapseProperties	file:	signature:( d )
mynest::nest::CommonSynapseProperties::set_status	../modulatory_connection.cpp	/^        nest::CommonSynapseProperties::set_status( d, cm );$/;"	p	class:mynest::nest::CommonSynapseProperties	file:	signature:( d, cm )
mynest::num_spikes	../modulatory_connection.h	/^            nest::double_t num_spikes = 0;$/;"	l
mynest::std::endl	../modulatory_connection.h	/^            std::cout << t_trig << " " <<  weight_  << std::endl;$/;"	m	class:mynest::std
mynest::vtgid	../modulatory_connection.cpp	/^        nest::long_t vtgid;$/;"	l
n	../libltdl/slist.c	/^  size_t n;$/;"	l
n_elements	../libltdl/ltdl.c	/^  int n_elements = 0;$/;"	l
name	../libltdl/libltdl/lt_dlloader.h	/^  const char *		name;$/;"	m	struct:__anon6	access:public
name	../libltdl/loaders/dyld.c	/^	      char *name = (char *) (base + (unsigned long) lc);$/;"	l
name	../libltdl/lt_dlloader.c	/^  const char *	    name    = (const char *) userdata;$/;"	l
name	../libltdl/ltdl.c	/^	      char *name;$/;"	l
name	../libltdl/ltdl.c	/^  char *	name		= 0;$/;"	l
name	../libltdl/ltdl.h	/^  char *	name;		\/* module name *\/$/;"	m	struct:__anon8	access:public
name	../libltdl/ltdl.h	/^  const char *name;$/;"	m	struct:__anon7	access:public
name	../modmodule.cpp	/^mynest::ModModule::name( void ) const$/;"	f	class:mynest::ModModule	signature:( void ) const
name	../modmodule.h	/^  const std::string name( void ) const;$/;"	p	class:mynest::ModModule	access:public	signature:( void ) const
name_len	../libltdl/ltdl.c	/^		  size_t name_len = 3+ \/* "lib" *\/ LT_STRLEN (p + 2);$/;"	l
names	../libltdl/ltdl.c	/^  char	**names = 0;$/;"	l
nest::DynamicLoaderModule::registerLinkedModule	../modmodule.cpp	/^  nest::DynamicLoaderModule::registerLinkedModule( this );$/;"	p	class:nest::DynamicLoaderModule	file:	signature:( this )
nest::get_network	../modmodule.cpp	/^    nest::NestModule::get_network(), "d1_synapse" );$/;"	p	class:nest	file:	signature:()
nest::get_network	../modmodule.cpp	/^    nest::NestModule::get_network(), "d2_synapse" );$/;"	p	class:nest	file:	signature:()
nest::get_network	../modmodule.cpp	/^    nest::NestModule::get_network(), "modulatory_synapse" );$/;"	p	class:nest	file:	signature:()
newhandle	../libltdl/ltdl.c	/^  lt_dlhandle	newhandle;$/;"	l
newmem	../libltdl/lt__alloc.c	/^  void *newmem;$/;"	l
next	../libltdl/libltdl/lt__private.h	/^  lt_dlhandle		next;$/;"	m	struct:lt__handle	access:public
next	../libltdl/libltdl/slist.h	/^  struct slist *next;		\/* chain forward pointer*\/$/;"	m	struct:slist	typeref:struct:slist::slist	access:public
next	../libltdl/loaders/preopen.c	/^      symlist_chain *next = lists->next;$/;"	l
next	../libltdl/loaders/preopen.c	/^  struct symlist_chain *next;$/;"	m	struct:symlist_chain	typeref:struct:symlist_chain::symlist_chain	file:	access:public
next	../libltdl/ltdl.c	/^	  lt_dlloader *next   = (lt_dlloader *) lt_dlloader_next (loader);$/;"	l
next	../libltdl/slist.c	/^      SList *next = head->next;$/;"	l
next	../libltdl/slist.c	/^      SList *next = slist->next;$/;"	l
next	../libltdl/slist.c	/^  SList *next;$/;"	l
next_symbol	../libltdl/loaders/preopen.c	/^	      const lt_dlsymlist *next_symbol = symbol +1;$/;"	l
notfound	../libltdl/ltdl.c	/^  int		notfound	= access (filename, R_OK);$/;"	l
nssym	../libltdl/loaders/dyld.c	/^  NSSymbol *nssym = 0;$/;"	l
num_spikes	../modulatory_connection.h	/^            nest::double_t num_spikes = 0;$/;"	l
objdir	../libltdl/ltdl.c	/^static	const char	objdir[]		= LT_OBJDIR;$/;"	v	file:
offset	../libltdl/argz.c	/^    size_t offset	= before - *pargz;$/;"	l
offset	../libltdl/loaders/dyld.c	/^      unsigned long offset = sizeof(mach_header);$/;"	l
offset	../libltdl/loaders/dyld.c	/^  unsigned long offset = sizeof(mach_header);$/;"	l
ofi	../libltdl/loaders/dyld.c	/^  NSObjectFileImage ofi = 0;$/;"	l
old	../libltdl/loaders/loadlibrary.c	/^  DWORD old = (DWORD) SetErrorMode (mode);$/;"	l
old_name	../libltdl/ltdl.c	/^      char *	old_name = 0;$/;"	l
opendir	../libltdl/libltdl/lt__dirent.h	/^LT_SCOPE DIR *		opendir		(const char *path);$/;"	p	signature:(const char *path)
opendir	../libltdl/libltdl/lt__dirent.h	56;"	d
opendir	../libltdl/lt__dirent.c	/^opendir (const char *path)$/;"	f	signature:(const char *path)
p	../libltdl/argz.c	/^      const char *p;$/;"	l
p	../libltdl/lt__strl.c	/^  char *p;$/;"	l
p	../libltdl/ltdl.c	/^    char *p;$/;"	l
p	../libltdl/ltdl.c	/^  char	*p, *save_search_path = 0;$/;"	l
parse_dotla_file	../libltdl/ltdl.c	/^parse_dotla_file(FILE *file, char **dlname, char **libdir, char **deplibs,$/;"	f	file:	signature:(FILE *file, char **dlname, char **libdir, char **deplibs, char **old_name, int *installed)
pdir	../libltdl/ltdl.c	/^  char	     **pdir	= (char **) data1;$/;"	l
pfile	../libltdl/ltdl.c	/^  FILE	     **pfile	= (FILE **) data2;$/;"	l
phandle	../libltdl/ltdl.c	/^  lt_dlhandle  *phandle		= (lt_dlhandle *) data;$/;"	l
preloaded_symbols	../libltdl/ltdl.c	/^extern LT_DLSYM_CONST lt_dlsymlist preloaded_symbols[];$/;"	x
preloaded_symbols	../libltdl/ltdl.c	215;"	d	file:
preloaded_symlists	../libltdl/loaders/preopen.c	/^static symlist_chain	       *preloaded_symlists		= 0;$/;"	v	file:
priority	../libltdl/libltdl/lt_dlloader.h	/^  lt_dlloader_priority	priority;$/;"	m	struct:__anon6	access:public
program_details	../libltdl/config/missing	/^program_details ()$/;"	f
prototypes	../libltdl/configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
q	../libltdl/argz.c	/^      char *q;$/;"	l
q	../libltdl/lt__strl.c	/^  const char *q;$/;"	l
readdir	../libltdl/libltdl/lt__dirent.h	/^LT_SCOPE struct dirent *readdir		(DIR *entry);$/;"	p	signature:(DIR *entry)
readdir	../libltdl/libltdl/lt__dirent.h	57;"	d
readdir	../libltdl/lt__dirent.c	/^readdir (DIR *entry)$/;"	f	signature:(DIR *entry)
ref_count	../libltdl/ltdl.h	/^  int		ref_count;	\/* number of times lt_dlopened minus$/;"	m	struct:__anon8	access:public
registerLinkedModule	../modmodule.cpp	/^  nest::DynamicLoaderModule::registerLinkedModule( this );$/;"	p	class:nest::DynamicLoaderModule	file:	signature:( this )
result	../libltdl/loaders/dyld.c	/^  const char* result   = 0;$/;"	l
result	../libltdl/lt_error.c	/^  int		result	 = -1;$/;"	l
result	../libltdl/ltdl.c	/^  int	 result		= 0;$/;"	l
result	../libltdl/ltdl.c	/^  void *result = (void *) 0;$/;"	l
result	../libltdl/slist.c	/^  SList *result = 0;$/;"	l
result	../libltdl/slist.c	/^  void *result = 0;$/;"	l
right	../libltdl/slist.c	/^  SList *left, *right;$/;"	l
save	../libltdl/ltdl.c	/^	      char save = *end;$/;"	l
saveError	../libltdl/loaders/dyld.c	/^  char saveError[256] = "Symbol not found";$/;"	l
save_search_path	../libltdl/ltdl.c	/^  char	*p, *save_search_path = 0;$/;"	l
saved_error	../libltdl/ltdl.c	/^      const char *saved_error;$/;"	l
saved_error	../libltdl/ltdl.c	/^  const char *	saved_error	= 0;$/;"	l
saved_path	../libltdl/ltdl.c	/^  const char *saved_path;$/;"	l
saw_nonresident	../libltdl/ltdl.c	/^	  int saw_nonresident = 0;$/;"	l
search_path	../libltdl/ltdl.c	/^	  const char *search_path = user_search_path;$/;"	l
self	../libltdl/loaders/shl_load.c	/^  static shl_t self = (shl_t) 0;$/;"	l	file:
send	../modulatory_connection.h	/^            void send( nest::Event& e,$/;"	p	class:mynest::ModulatoryConnection	access:public	signature:( nest::Event& e, nest::thread t, nest::double_t t_lastspike, const CommonPropertiesType& cp )
send	../modulatory_connection.h	/^        inline void ModulatoryConnection< targetidentifierT >::send( nest::Event& e,$/;"	f	class:mynest::ModulatoryConnection	signature:( nest::Event& e, nest::thread t, nest::double_t last, const CommonPropertiesType& props )
set_alpha	../da_connection.h	/^            void  set_alpha( nest::double_t alpha_ )$/;"	f	class:mynest::D1Connection	access:public	signature:( nest::double_t alpha_ )
set_alpha	../da_connection.h	/^            void  set_alpha( nest::double_t alpha_ )$/;"	f	class:mynest::D2Connection	access:public	signature:( nest::double_t alpha_ )
set_base_from	../libltdl/config/depcomp	/^set_base_from ()$/;"	f
set_dir_from	../libltdl/config/depcomp	/^set_dir_from ()$/;"	f
set_status	../da_connection.h	/^            ConnectionBase::set_status( d, cm );$/;"	p	class:mynest::ConnectionBase	signature:( d, cm )
set_status	../da_connection.h	/^            void set_status( const DictionaryDatum& d, nest::ConnectorModel& cm );$/;"	p	class:mynest::D1Connection	access:public	signature:( const DictionaryDatum& d, nest::ConnectorModel& cm )
set_status	../da_connection.h	/^            void set_status( const DictionaryDatum& d, nest::ConnectorModel& cm );$/;"	p	class:mynest::D2Connection	access:public	signature:( const DictionaryDatum& d, nest::ConnectorModel& cm )
set_status	../da_connection.h	/^        void D1Connection< targetidentifierT >::set_status( const DictionaryDatum& d,$/;"	f	class:mynest::D1Connection	signature:( const DictionaryDatum& d, nest::ConnectorModel& cm )
set_status	../da_connection.h	/^        void D2Connection< targetidentifierT >::set_status( const DictionaryDatum& d,$/;"	f	class:mynest::D2Connection	signature:( const DictionaryDatum& d, nest::ConnectorModel& cm )
set_status	../modulatory_connection.cpp	/^        nest::CommonSynapseProperties::set_status( d, cm );$/;"	p	class:mynest::nest::CommonSynapseProperties	file:	signature:( d, cm )
set_status	../modulatory_connection.cpp	/^    void ModulatoryCommonProperties::set_status( const DictionaryDatum& d, $/;"	f	class:mynest::ModulatoryCommonProperties	signature:( const DictionaryDatum& d, nest::ConnectorModel& cm )
set_status	../modulatory_connection.h	/^            ConnectionBase::set_status( d, cm );$/;"	p	class:mynest::ConnectionBase	signature:( d, cm )
set_status	../modulatory_connection.h	/^            void set_status( const DictionaryDatum& d, nest::ConnectorModel& cm );$/;"	p	class:mynest::ModulatoryCommonProperties	access:public	signature:( const DictionaryDatum& d, nest::ConnectorModel& cm )
set_status	../modulatory_connection.h	/^            void set_status( const DictionaryDatum& d, nest::ConnectorModel& cm );$/;"	p	class:mynest::ModulatoryConnection	access:public	signature:( const DictionaryDatum& d, nest::ConnectorModel& cm )
set_status	../modulatory_connection.h	/^        void ModulatoryConnection< targetidentifierT >::set_status( const DictionaryDatum& d,$/;"	f	class:mynest::ModulatoryConnection	signature:( const DictionaryDatum& d, nest::ConnectorModel& cm )
set_weight	../modulatory_connection.h	/^            void  set_weight( nest::double_t w )$/;"	f	class:mynest::ModulatoryConnection	access:public	signature:( nest::double_t w )
setthreaderrormode	../libltdl/loaders/loadlibrary.c	/^static setthreaderrormode_type *setthreaderrormode = wrap_setthreaderrormode;$/;"	v	file:
setthreaderrormode_type	../libltdl/loaders/loadlibrary.c	/^typedef BOOL (WINAPI setthreaderrormode_type) (DWORD, DWORD *);$/;"	t	file:
shared_ext	../libltdl/ltdl.c	/^static	const char	shared_ext[]		= LT_SHARED_EXT;$/;"	v	file:
shlib_ext	../libltdl/ltdl.c	/^static	const char	shlib_ext[]		= LT_MODULE_EXT;$/;"	v	file:
slist	../libltdl/libltdl/slist.h	/^typedef struct slist {$/;"	s
slist::next	../libltdl/libltdl/slist.h	/^  struct slist *next;		\/* chain forward pointer*\/$/;"	m	struct:slist	typeref:struct:slist::slist	access:public
slist::userdata	../libltdl/libltdl/slist.h	/^  const void *userdata;		\/* for boxed `SList' item *\/$/;"	m	struct:slist	access:public
slist_box	../libltdl/libltdl/lt__glibc.h	78;"	d
slist_box	../libltdl/libltdl/slist.h	/^LT_SCOPE SList *slist_box	(const void *userdata);$/;"	p	signature:(const void *userdata)
slist_box	../libltdl/slist.c	/^slist_box (const void *userdata)$/;"	f	signature:(const void *userdata)
slist_concat	../libltdl/libltdl/lt__glibc.h	67;"	d
slist_concat	../libltdl/libltdl/slist.h	/^LT_SCOPE SList *slist_concat	(SList *head, SList *tail);$/;"	p	signature:(SList *head, SList *tail)
slist_concat	../libltdl/slist.c	/^slist_concat (SList *head, SList *tail)$/;"	f	signature:(SList *head, SList *tail)
slist_cons	../libltdl/libltdl/lt__glibc.h	68;"	d
slist_cons	../libltdl/libltdl/slist.h	/^LT_SCOPE SList *slist_cons	(SList *item, SList *slist);$/;"	p	signature:(SList *item, SList *slist)
slist_cons	../libltdl/slist.c	/^slist_cons (SList *item, SList *slist)$/;"	f	signature:(SList *item, SList *slist)
slist_delete	../libltdl/libltdl/lt__glibc.h	69;"	d
slist_delete	../libltdl/libltdl/slist.h	/^LT_SCOPE SList *slist_delete	(SList *slist, void (*delete_fct) (void *item));$/;"	p	signature:(SList *slist, void (*delete_fct) (void *item))
slist_delete	../libltdl/slist.c	/^slist_delete (SList *head, void (*delete_fct) (void *item))$/;"	f	signature:(SList *head, void (*delete_fct) (void *item))
slist_find	../libltdl/libltdl/lt__glibc.h	75;"	d
slist_find	../libltdl/libltdl/slist.h	/^LT_SCOPE void *	slist_find	(SList *slist, SListCallback *find,$/;"	p	signature:(SList *slist, SListCallback *find, void *matchdata)
slist_find	../libltdl/slist.c	/^slist_find (SList *slist, SListCallback *find, void *matchdata)$/;"	f	signature:(SList *slist, SListCallback *find, void *matchdata)
slist_foreach	../libltdl/libltdl/lt__glibc.h	77;"	d
slist_foreach	../libltdl/libltdl/slist.h	/^LT_SCOPE void *	slist_foreach   (SList *slist, SListCallback *foreach,$/;"	p	signature:(SList *slist, SListCallback *foreach, void *userdata)
slist_foreach	../libltdl/slist.c	/^slist_foreach (SList *slist, SListCallback *foreach, void *userdata)$/;"	f	signature:(SList *slist, SListCallback *foreach, void *userdata)
slist_length	../libltdl/libltdl/lt__glibc.h	76;"	d
slist_length	../libltdl/libltdl/slist.h	/^LT_SCOPE size_t slist_length	(SList *slist);$/;"	p	signature:(SList *slist)
slist_length	../libltdl/slist.c	/^slist_length (SList *slist)$/;"	f	signature:(SList *slist)
slist_nth	../libltdl/libltdl/lt__glibc.h	74;"	d
slist_nth	../libltdl/libltdl/slist.h	/^LT_SCOPE SList *slist_nth	(SList *slist, size_t n);$/;"	p	signature:(SList *slist, size_t n)
slist_nth	../libltdl/slist.c	/^slist_nth (SList *slist, size_t n)$/;"	f	signature:(SList *slist, size_t n)
slist_remove	../libltdl/libltdl/lt__glibc.h	70;"	d
slist_remove	../libltdl/libltdl/slist.h	/^LT_SCOPE SList *slist_remove	(SList **phead, SListCallback *find,$/;"	p	signature:(SList **phead, SListCallback *find, void *matchdata)
slist_remove	../libltdl/slist.c	/^slist_remove (SList **phead, SListCallback *find, void *matchdata)$/;"	f	signature:(SList **phead, SListCallback *find, void *matchdata)
slist_reverse	../libltdl/libltdl/lt__glibc.h	71;"	d
slist_reverse	../libltdl/libltdl/slist.h	/^LT_SCOPE SList *slist_reverse	(SList *slist);$/;"	p	signature:(SList *slist)
slist_reverse	../libltdl/slist.c	/^slist_reverse (SList *slist)$/;"	f	signature:(SList *slist)
slist_sort	../libltdl/libltdl/lt__glibc.h	72;"	d
slist_sort	../libltdl/libltdl/slist.h	/^LT_SCOPE SList *slist_sort	(SList *slist, SListCompare *compare,$/;"	p	signature:(SList *slist, SListCompare *compare, void *userdata)
slist_sort	../libltdl/slist.c	/^slist_sort (SList *slist, SListCompare *compare, void *userdata)$/;"	f	signature:(SList *slist, SListCompare *compare, void *userdata)
slist_sort_merge	../libltdl/slist.c	/^slist_sort_merge (SList *left, SList *right, SListCompare *compare,$/;"	f	file:	signature:(SList *left, SList *right, SListCompare *compare, void *userdata)
slist_sort_merge	../libltdl/slist.c	/^static SList *	slist_sort_merge    (SList *left, SList *right,$/;"	p	file:	signature:(SList *left, SList *right, SListCompare *compare, void *userdata)
slist_tail	../libltdl/libltdl/lt__glibc.h	73;"	d
slist_tail	../libltdl/libltdl/slist.h	/^LT_SCOPE SList *slist_tail	(SList *slist);$/;"	p	signature:(SList *slist)
slist_tail	../libltdl/lt_dlloader.c	/^	slist_foreach (slist_tail (loaders), loader_dump_callback, NULL);$/;"	p	file:
slist_tail	../libltdl/slist.c	/^slist_tail (SList *slist)$/;"	f	signature:(SList *slist)
slist_unbox	../libltdl/libltdl/lt__glibc.h	79;"	d
slist_unbox	../libltdl/libltdl/slist.h	/^LT_SCOPE void *	slist_unbox	(SList *item);$/;"	p	signature:(SList *item)
slist_unbox	../libltdl/slist.c	/^slist_unbox (SList *item)$/;"	f	signature:(SList *item)
src	../libltdl/ltdl.c	/^    size_t src;$/;"	l
stale	../libltdl/ltdl.c	/^  void *stale = (void *) 0;$/;"	l
stale	../libltdl/slist.c	/^  SList *stale = 0;$/;"	l
status	../libltdl/lt__dirent.c	/^  int status;$/;"	l
strchr	../libltdl/ltdl.c	/^  assert (strchr (dirname, LT_DIRSEP_CHAR) == 0);$/;"	p	file:
streq	../libltdl/libltdl/lt__private.h	98;"	d
strlcat	../libltdl/libltdl/lt__strl.h	44;"	d
strlcpy	../libltdl/libltdl/lt__strl.h	49;"	d
strneq	../libltdl/libltdl/lt__private.h	97;"	d
sym	../libltdl/ltdl.c	/^  char	*sym;$/;"	l
sym_prefix	../libltdl/libltdl/lt_dlloader.h	/^  const char *		sym_prefix;$/;"	m	struct:__anon6	access:public
symbol	../libltdl/loaders/dyld.c	/^  NSSymbol symbol = 0;$/;"	l
symbol	../libltdl/loaders/preopen.c	/^	  const lt_dlsymlist *symbol;$/;"	l
symbol	../libltdl/loaders/preopen.c	/^      const lt_dlsymlist *symbol;$/;"	l
symbol	../libltdl/loaders/preopen.c	/^  lt_dlsymlist	       *symbol = (lt_dlsymlist*) module;$/;"	l
symlist	../libltdl/loaders/preopen.c	/^  const lt_dlsymlist   *symlist;$/;"	m	struct:symlist_chain	file:	access:public
symlist_chain	../libltdl/loaders/preopen.c	/^typedef struct symlist_chain$/;"	s	file:
symlist_chain	../libltdl/loaders/preopen.c	/^} symlist_chain;$/;"	t	typeref:struct:symlist_chain	file:
symlist_chain::next	../libltdl/loaders/preopen.c	/^  struct symlist_chain *next;$/;"	m	struct:symlist_chain	typeref:struct:symlist_chain::symlist_chain	file:	access:public
symlist_chain::symlist	../libltdl/loaders/preopen.c	/^  const lt_dlsymlist   *symlist;$/;"	m	struct:symlist_chain	file:	access:public
sys_dlsearch_path	../libltdl/ltdl.c	/^static	const char	sys_dlsearch_path[]	= LT_DLSEARCH_PATH;$/;"	v	file:
system	../libltdl/libltdl/lt__private.h	/^  void *		system;		\/* system specific data *\/$/;"	m	struct:lt__handle	access:public
temp	../libltdl/lt_error.c	/^  const char  **temp     = (const char **) 0;$/;"	l
temp	../libltdl/ltdl.c	/^      lt_interface_data *temp$/;"	l
tmp	../libltdl/loaders/preopen.c	/^      symlist_chain *tmp = (symlist_chain *) lt__zalloc (sizeof *tmp);$/;"	l
tmp	../libltdl/ltdl.c	/^	      lt_dlhandle tmp = cur;$/;"	l
tmp	../libltdl/ltdl.c	/^  char *tmp;$/;"	l
trigger_update_weight	../modulatory_connection.h	/^            void trigger_update_weight( nest::thread t,$/;"	p	class:mynest::ModulatoryConnection	access:public	signature:( nest::thread t, const std::vector< nest::spikecounter >& modulatory_spikes, double_t t_trig, const CommonPropertiesType& cp )
trigger_update_weight	../modulatory_connection.h	/^        inline void ModulatoryConnection< targetidentifierT >::trigger_update_weight( $/;"	f	class:mynest::ModulatoryConnection	signature:( nest::thread t, const std::vector< nest::spikecounter >& modulatory_spikes, const nest::double_t t_trig, const CommonPropertiesType& cp )
trim	../libltdl/ltdl.c	/^static	int	trim		      (char **dest, const char *str);$/;"	p	file:	signature:(char **dest, const char *str)
trim	../libltdl/ltdl.c	/^trim (char **dest, const char *str)$/;"	f	file:	signature:(char **dest, const char *str)
try_dlopen	../libltdl/ltdl.c	/^static	int	try_dlopen	      (lt_dlhandle *handle,$/;"	p	file:	signature:(lt_dlhandle *handle, const char *filename, const char *ext, lt_dladvise advise)
try_dlopen	../libltdl/ltdl.c	/^try_dlopen (lt_dlhandle *phandle, const char *filename, const char *ext,$/;"	f	file:	signature:(lt_dlhandle *phandle, const char *filename, const char *ext, lt_dladvise advise)
try_ext	../libltdl/libltdl/lt__private.h	/^  unsigned int	try_ext:1;	\/* try system library extensions.  *\/$/;"	m	struct:lt__advise	access:public
try_preload_only	../libltdl/libltdl/lt__private.h	/^  unsigned int	try_preload_only:1;\/* only preloaded modules will be tried. *\/$/;"	m	struct:lt__advise	access:public
tryall_dlopen	../libltdl/ltdl.c	/^static	int	tryall_dlopen	      (lt_dlhandle *handle,$/;"	p	file:	signature:(lt_dlhandle *handle, const char *filename, lt_dladvise padvise, const lt_dlvtable *vtable)
tryall_dlopen	../libltdl/ltdl.c	/^tryall_dlopen (lt_dlhandle *phandle, const char *filename,$/;"	f	file:	signature:(lt_dlhandle *phandle, const char *filename, lt_dladvise advise, const lt_dlvtable *vtable)
tryall_dlopen_module	../libltdl/ltdl.c	/^tryall_dlopen_module (lt_dlhandle *handle, const char *prefix,$/;"	f	file:	signature:(lt_dlhandle *handle, const char *prefix, const char *dirname, const char *dlname, lt_dladvise advise)
unload_deplibs	../libltdl/ltdl.c	/^static	int	unload_deplibs	      (lt_dlhandle handle);$/;"	p	file:	signature:(lt_dlhandle handle)
unload_deplibs	../libltdl/ltdl.c	/^unload_deplibs (lt_dlhandle handle)$/;"	f	file:	signature:(lt_dlhandle handle)
unused	../libltdl/loaders/dyld.c	/^      void *address, *unused;$/;"	l
user_error_strings	../libltdl/lt_error.c	/^static	const char    **user_error_strings	= 0;$/;"	v	file:
user_search_path	../libltdl/ltdl.c	/^static	char	       *user_search_path= 0;$/;"	v	file:
userdata	../libltdl/libltdl/slist.h	/^  const void *userdata;		\/* for boxed `SList' item *\/$/;"	m	struct:slist	access:public
userdata	../libltdl/slist.c	/^  void *userdata = 0;$/;"	l
vl_exit	../libltdl/loaders/dld_link.c	/^static int	 vl_exit  (lt_user_data loader_data);$/;"	p	file:	signature:(lt_user_data loader_data)
vl_exit	../libltdl/loaders/dld_link.c	/^vl_exit (lt_user_data LT__UNUSED loader_data)$/;"	f	file:	signature:(lt_user_data LT__UNUSED loader_data)
vl_exit	../libltdl/loaders/dlopen.c	/^static int	 vl_exit  (lt_user_data loader_data);$/;"	p	file:	signature:(lt_user_data loader_data)
vl_exit	../libltdl/loaders/dlopen.c	/^vl_exit (lt_user_data LT__UNUSED loader_data)$/;"	f	file:	signature:(lt_user_data LT__UNUSED loader_data)
vl_exit	../libltdl/loaders/dyld.c	/^static int	 vl_exit  (lt_user_data loader_data);$/;"	p	file:	signature:(lt_user_data loader_data)
vl_exit	../libltdl/loaders/dyld.c	/^vl_exit (lt_user_data LT__UNUSED loader_data)$/;"	f	file:	signature:(lt_user_data LT__UNUSED loader_data)
vl_exit	../libltdl/loaders/load_add_on.c	/^static int	 vl_exit  (lt_user_data loader_data);$/;"	p	file:	signature:(lt_user_data loader_data)
vl_exit	../libltdl/loaders/load_add_on.c	/^vl_exit (lt_user_data LT__UNUSED loader_data)$/;"	f	file:	signature:(lt_user_data LT__UNUSED loader_data)
vl_exit	../libltdl/loaders/loadlibrary.c	/^static int	 vl_exit  (lt_user_data loader_data);$/;"	p	file:	signature:(lt_user_data loader_data)
vl_exit	../libltdl/loaders/loadlibrary.c	/^vl_exit (lt_user_data LT__UNUSED loader_data)$/;"	f	file:	signature:(lt_user_data LT__UNUSED loader_data)
vl_exit	../libltdl/loaders/preopen.c	/^static int	 vl_exit  (lt_user_data loader_data);$/;"	p	file:	signature:(lt_user_data loader_data)
vl_exit	../libltdl/loaders/preopen.c	/^vl_exit (lt_user_data LT__UNUSED loader_data)$/;"	f	file:	signature:(lt_user_data LT__UNUSED loader_data)
vl_exit	../libltdl/loaders/shl_load.c	/^static int	 vl_exit  (lt_user_data loader_data);$/;"	p	file:	signature:(lt_user_data loader_data)
vl_exit	../libltdl/loaders/shl_load.c	/^vl_exit (lt_user_data LT__UNUSED loader_data)$/;"	f	file:	signature:(lt_user_data LT__UNUSED loader_data)
vl_init	../libltdl/loaders/dyld.c	/^static int	 vl_init  (lt_user_data loader_data);$/;"	p	file:	signature:(lt_user_data loader_data)
vl_init	../libltdl/loaders/dyld.c	/^vl_init (lt_user_data loader_data)$/;"	f	file:	signature:(lt_user_data loader_data)
vl_init	../libltdl/loaders/preopen.c	/^static int	 vl_init  (lt_user_data loader_data);$/;"	p	file:	signature:(lt_user_data loader_data)
vl_init	../libltdl/loaders/preopen.c	/^vl_init (lt_user_data LT__UNUSED loader_data)$/;"	f	file:	signature:(lt_user_data LT__UNUSED loader_data)
vm_close	../libltdl/loaders/dld_link.c	/^static int	 vm_close (lt_user_data loader_data, lt_module module);$/;"	p	file:	signature:(lt_user_data loader_data, lt_module module)
vm_close	../libltdl/loaders/dld_link.c	/^vm_close (lt_user_data LT__UNUSED loader_data, lt_module module)$/;"	f	file:	signature:(lt_user_data LT__UNUSED loader_data, lt_module module)
vm_close	../libltdl/loaders/dlopen.c	/^static int	 vm_close (lt_user_data loader_data, lt_module module);$/;"	p	file:	signature:(lt_user_data loader_data, lt_module module)
vm_close	../libltdl/loaders/dlopen.c	/^vm_close (lt_user_data LT__UNUSED loader_data, lt_module module)$/;"	f	file:	signature:(lt_user_data LT__UNUSED loader_data, lt_module module)
vm_close	../libltdl/loaders/dyld.c	/^static int	 vm_close (lt_user_data loader_data, lt_module module);$/;"	p	file:	signature:(lt_user_data loader_data, lt_module module)
vm_close	../libltdl/loaders/dyld.c	/^vm_close (lt_user_data loader_data, lt_module module)$/;"	f	file:	signature:(lt_user_data loader_data, lt_module module)
vm_close	../libltdl/loaders/load_add_on.c	/^static int	 vm_close (lt_user_data loader_data, lt_module module);$/;"	p	file:	signature:(lt_user_data loader_data, lt_module module)
vm_close	../libltdl/loaders/load_add_on.c	/^vm_close (lt_user_data LT__UNUSED loader_data, lt_module module)$/;"	f	file:	signature:(lt_user_data LT__UNUSED loader_data, lt_module module)
vm_close	../libltdl/loaders/loadlibrary.c	/^static int	 vm_close (lt_user_data loader_data, lt_module module);$/;"	p	file:	signature:(lt_user_data loader_data, lt_module module)
vm_close	../libltdl/loaders/loadlibrary.c	/^vm_close (lt_user_data LT__UNUSED loader_data, lt_module module)$/;"	f	file:	signature:(lt_user_data LT__UNUSED loader_data, lt_module module)
vm_close	../libltdl/loaders/preopen.c	/^static int	 vm_close (lt_user_data loader_data, lt_module module);$/;"	p	file:	signature:(lt_user_data loader_data, lt_module module)
vm_close	../libltdl/loaders/preopen.c	/^vm_close (lt_user_data LT__UNUSED loader_data, lt_module LT__UNUSED module)$/;"	f	file:	signature:(lt_user_data LT__UNUSED loader_data, lt_module LT__UNUSED module)
vm_close	../libltdl/loaders/shl_load.c	/^static int	 vm_close (lt_user_data loader_data, lt_module module);$/;"	p	file:	signature:(lt_user_data loader_data, lt_module module)
vm_close	../libltdl/loaders/shl_load.c	/^vm_close (lt_user_data LT__UNUSED loader_data, lt_module module)$/;"	f	file:	signature:(lt_user_data LT__UNUSED loader_data, lt_module module)
vm_open	../libltdl/loaders/dld_link.c	/^static lt_module vm_open  (lt_user_data loader_data, const char *filename,$/;"	p	file:	signature:(lt_user_data loader_data, const char *filename, lt_dladvise advise)
vm_open	../libltdl/loaders/dld_link.c	/^vm_open (lt_user_data LT__UNUSED loader_data, const char *filename,$/;"	f	file:	signature:(lt_user_data LT__UNUSED loader_data, const char *filename, lt_dladvise LT__UNUSED advise)
vm_open	../libltdl/loaders/dlopen.c	/^static lt_module vm_open  (lt_user_data loader_data, const char *filename,$/;"	p	file:	signature:(lt_user_data loader_data, const char *filename, lt_dladvise advise)
vm_open	../libltdl/loaders/dlopen.c	/^vm_open (lt_user_data LT__UNUSED loader_data, const char *filename,$/;"	f	file:	signature:(lt_user_data LT__UNUSED loader_data, const char *filename, lt_dladvise advise)
vm_open	../libltdl/loaders/dyld.c	/^static lt_module vm_open  (lt_user_data loader_data, const char *filename,$/;"	p	file:	signature:(lt_user_data loader_data, const char *filename, lt_dladvise advise)
vm_open	../libltdl/loaders/dyld.c	/^vm_open (lt_user_data loader_data, const char *filename,$/;"	f	file:	signature:(lt_user_data loader_data, const char *filename, lt_dladvise LT__UNUSED advise)
vm_open	../libltdl/loaders/load_add_on.c	/^static lt_module vm_open  (lt_user_data loader_data, const char *filename,$/;"	p	file:	signature:(lt_user_data loader_data, const char *filename, lt_dladvise advise)
vm_open	../libltdl/loaders/load_add_on.c	/^vm_open (lt_user_data LT__UNUSED loader_data, const char *filename,$/;"	f	file:	signature:(lt_user_data LT__UNUSED loader_data, const char *filename, lt_dladvise LT__UNUSED advise)
vm_open	../libltdl/loaders/loadlibrary.c	/^static lt_module vm_open  (lt_user_data loader_data, const char *filename,$/;"	p	file:	signature:(lt_user_data loader_data, const char *filename, lt_dladvise advise)
vm_open	../libltdl/loaders/loadlibrary.c	/^vm_open (lt_user_data LT__UNUSED loader_data, const char *filename,$/;"	f	file:	signature:(lt_user_data LT__UNUSED loader_data, const char *filename, lt_dladvise LT__UNUSED advise)
vm_open	../libltdl/loaders/preopen.c	/^static lt_module vm_open  (lt_user_data loader_data, const char *filename,$/;"	p	file:	signature:(lt_user_data loader_data, const char *filename, lt_dladvise advise)
vm_open	../libltdl/loaders/preopen.c	/^vm_open (lt_user_data LT__UNUSED loader_data, const char *filename,$/;"	f	file:	signature:(lt_user_data LT__UNUSED loader_data, const char *filename, lt_dladvise LT__UNUSED advise)
vm_open	../libltdl/loaders/shl_load.c	/^static lt_module vm_open  (lt_user_data loader_data, const char *filename,$/;"	p	file:	signature:(lt_user_data loader_data, const char *filename, lt_dladvise advise)
vm_open	../libltdl/loaders/shl_load.c	/^vm_open (lt_user_data LT__UNUSED loader_data, const char *filename,$/;"	f	file:	signature:(lt_user_data LT__UNUSED loader_data, const char *filename, lt_dladvise LT__UNUSED advise)
vm_sym	../libltdl/loaders/dld_link.c	/^static void *	 vm_sym   (lt_user_data loader_data, lt_module module,$/;"	p	file:	signature:(lt_user_data loader_data, lt_module module, const char *symbolname)
vm_sym	../libltdl/loaders/dld_link.c	/^vm_sym (lt_user_data LT__UNUSED loader_data, lt_module LT__UNUSED module,$/;"	f	file:	signature:(lt_user_data LT__UNUSED loader_data, lt_module LT__UNUSED module, const char *name)
vm_sym	../libltdl/loaders/dlopen.c	/^static void *	 vm_sym   (lt_user_data loader_data, lt_module module,$/;"	p	file:	signature:(lt_user_data loader_data, lt_module module, const char *symbolname)
vm_sym	../libltdl/loaders/dlopen.c	/^vm_sym (lt_user_data LT__UNUSED loader_data, lt_module module, const char *name)$/;"	f	file:	signature:(lt_user_data LT__UNUSED loader_data, lt_module module, const char *name)
vm_sym	../libltdl/loaders/dyld.c	/^static void *	 vm_sym   (lt_user_data loader_data, lt_module module,$/;"	p	file:	signature:(lt_user_data loader_data, lt_module module, const char *symbolname)
vm_sym	../libltdl/loaders/dyld.c	/^vm_sym (lt_user_data loader_data, lt_module module, const char *name)$/;"	f	file:	signature:(lt_user_data loader_data, lt_module module, const char *name)
vm_sym	../libltdl/loaders/load_add_on.c	/^static void *	 vm_sym   (lt_user_data loader_data, lt_module module,$/;"	p	file:	signature:(lt_user_data loader_data, lt_module module, const char *symbolname)
vm_sym	../libltdl/loaders/load_add_on.c	/^vm_sym (lt_user_data LT__UNUSED loader_data, lt_module module, const char *name)$/;"	f	file:	signature:(lt_user_data LT__UNUSED loader_data, lt_module module, const char *name)
vm_sym	../libltdl/loaders/loadlibrary.c	/^static void *	 vm_sym   (lt_user_data loader_data, lt_module module,$/;"	p	file:	signature:(lt_user_data loader_data, lt_module module, const char *symbolname)
vm_sym	../libltdl/loaders/loadlibrary.c	/^vm_sym (lt_user_data LT__UNUSED loader_data, lt_module module, const char *name)$/;"	f	file:	signature:(lt_user_data LT__UNUSED loader_data, lt_module module, const char *name)
vm_sym	../libltdl/loaders/preopen.c	/^static void *	 vm_sym   (lt_user_data loader_data, lt_module module,$/;"	p	file:	signature:(lt_user_data loader_data, lt_module module, const char *symbolname)
vm_sym	../libltdl/loaders/preopen.c	/^vm_sym (lt_user_data LT__UNUSED loader_data, lt_module module, const char *name)$/;"	f	file:	signature:(lt_user_data LT__UNUSED loader_data, lt_module module, const char *name)
vm_sym	../libltdl/loaders/shl_load.c	/^static void *	 vm_sym   (lt_user_data loader_data, lt_module module,$/;"	p	file:	signature:(lt_user_data loader_data, lt_module module, const char *symbolname)
vm_sym	../libltdl/loaders/shl_load.c	/^vm_sym (lt_user_data LT__UNUSED loader_data, lt_module module, const char *name)$/;"	f	file:	signature:(lt_user_data LT__UNUSED loader_data, lt_module module, const char *name)
vt_	../modulatory_connection.h	/^            nest::volume_transmitter* vt_;$/;"	m	class:mynest::ModulatoryCommonProperties	access:public
vtable	../libltdl/libltdl/lt__private.h	/^  const lt_dlvtable *	vtable;		\/* dlopening interface *\/$/;"	m	struct:lt__handle	access:public
vtable	../libltdl/loaders/dld_link.c	/^static lt_dlvtable *vtable = 0;$/;"	v	file:
vtable	../libltdl/loaders/dlopen.c	/^static lt_dlvtable *vtable = 0;$/;"	v	file:
vtable	../libltdl/loaders/dyld.c	/^static lt_dlvtable *vtable = 0;$/;"	v	file:
vtable	../libltdl/loaders/load_add_on.c	/^static lt_dlvtable *vtable = 0;$/;"	v	file:
vtable	../libltdl/loaders/loadlibrary.c	/^static lt_dlvtable *vtable = 0;$/;"	v	file:
vtable	../libltdl/loaders/preopen.c	/^static lt_dlvtable *vtable = 0;$/;"	v	file:
vtable	../libltdl/loaders/shl_load.c	/^static lt_dlvtable *vtable = 0;$/;"	v	file:
vtable	../libltdl/lt_dlloader.c	/^  const lt_dlvtable *	vtable	= lt_dlloader_find (name);$/;"	l
vtable	../libltdl/lt_dlloader.c	/^  const lt_dlvtable *vtable = (const lt_dlvtable *) item->userdata;$/;"	l
vtable	../libltdl/ltdl.c	/^	  lt_dlvtable *vtable = (lt_dlvtable *) lt_dlloader_get (loader);$/;"	l
vtable	../libltdl/ltdl.c	/^      const lt_dlvtable *vtable	= lt_dlloader_find ("lt_preopen");$/;"	l
vtable	../libltdl/ltdl.c	/^  const lt_dlvtable *vtable = 0;$/;"	l
vtable_func	../libltdl/ltdl.c	/^  lt_get_vtable *vtable_func = (lt_get_vtable *) lt_dlsym (handle, "get_vtable");$/;"	l
vtgid	../modulatory_connection.cpp	/^        nest::long_t vtgid;$/;"	l
weight_	../modulatory_connection.h	/^            nest::double_t weight_; \/\/!< Synaptic weight$/;"	m	class:mynest::ModulatoryConnection	access:private
wpath	../libltdl/loaders/loadlibrary.c	/^  char		wpath[MAX_PATH];$/;"	l
wrap_getthreaderrormode	../libltdl/loaders/loadlibrary.c	/^static DWORD WINAPI wrap_getthreaderrormode (void);$/;"	p	file:	signature:(void)
wrap_getthreaderrormode	../libltdl/loaders/loadlibrary.c	/^wrap_getthreaderrormode (void)$/;"	f	file:	signature:(void)
wrap_setthreaderrormode	../libltdl/loaders/loadlibrary.c	/^static BOOL WINAPI wrap_setthreaderrormode (DWORD mode, DWORD *oldmode);$/;"	p	file:	signature:(DWORD mode, DWORD *oldmode)
wrap_setthreaderrormode	../libltdl/loaders/loadlibrary.c	/^wrap_setthreaderrormode (DWORD mode, DWORD *oldmode)$/;"	f	file:	signature:(DWORD mode, DWORD *oldmode)
~ModModule	../modmodule.cpp	/^mynest::ModModule::~ModModule()$/;"	f	class:mynest::ModModule	signature:()
~ModModule	../modmodule.h	/^  ~ModModule();$/;"	p	class:mynest::ModModule	access:public	signature:()
~ModulatoryConnection	../modulatory_connection.h	/^            virtual ~ModulatoryConnection()$/;"	f	class:mynest::ModulatoryConnection	access:public	implementation:virtual	signature:()
